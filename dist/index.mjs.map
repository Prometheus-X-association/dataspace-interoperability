{"version":3,"sources":["../src/convertors/PtxToGaiaX.convertor.ts","../src/types/dsp/Resource.ts","../src/types/gaia-x/DataProduct.ts","../src/types/dsp/Dataset.ts","../src/types/gaia-x/DataSet.ts","../src/types/dsp/foaf/Agent.ts","../src/types/dsp/foaf/Person.ts","../src/types/dsp/foaf/Organization.ts","../src/types/dsp/foaf/index.ts","../src/types/dsp/Distribution.ts","../src/types/gaia-x/Distribution.ts","../src/types/gaia-x/vcard/Kind.ts","../src/types/gaia-x/vcard/index.ts","../src/types/dsp/Catalog.ts","../src/types/gaia-x/DataCatalog.ts","../src/types/dsp/skos/Concept.ts","../src/types/dsp/skos/ConceptScheme.ts","../src/types/dsp/skos/index.ts","../src/types/dsp/Relationship.ts","../src/types/ptx/DataResource.ts","../src/types/ptx/SoftwareResource.ts","../src/types/ptx/ServiceOffering.ts","../src/types/ptx/DataRepresentation.ts","../src/convertors/GaiaXToPtx.convertor.ts","../src/convertors/PtxToDcat.convertor.ts","../src/types/dsp/DataService.ts","../src/types/dsp/vcard/Kind.ts","../src/types/dsp/vcard/index.ts","../src/convertors/DcatToPtx.convertor.ts","../src/types/simpl/DataOffering.ts","../src/convertors/PtxToSimpl.convertor.ts","../src/convertors/SimplToPtx.convertor.ts","../src/types/ptx/Catalog.ts","../src/types/gaia-x/DataProductUsageContract.ts","../src/types/gaia-x/DataTransaction.ts","../src/types/dsp/Checksum.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { IDataResource } from '../types/ptx/DataResource';\r\nimport { ISoftwareResource } from '../types/ptx/SoftwareResource';\r\nimport { IServiceOffering } from '../types/ptx/ServiceOffering';\r\nimport { DataProduct } from '../types/gaia-x/DataProduct';\r\nimport { DataSet } from '../types/gaia-x/DataSet';\r\nimport { foaf } from '../types/dsp/foaf';\r\nimport { Distribution } from '../types/gaia-x/Distribution';\r\nimport { vcard } from '../types/gaia-x/vcard';\r\nimport { DataCatalog } from '../types/gaia-x/DataCatalog';\r\nimport { skos } from '../types/dsp/skos';\r\nimport { Relationship } from '../types/dsp/Relationship';\r\n\r\n/**\r\n * Prometheus-X Catalog to Gaia-X Catalog converter\r\n */\r\nexport class PtxToGaiaXConvertor {\r\n  /**\r\n   * Map a Prometheus-X Data Resource to a Gaia-X Data Set\r\n   * @param resource IDataResource\r\n   * @return DataSet\r\n   */\r\n  public mapDataResourceToDataSet(resource: IDataResource): DataSet {\r\n    const dataset = new DataSet({\r\n      'dct:distributions': [],\r\n      'dct:identifier': resource._id,\r\n      'dct:description': resource.description,\r\n      'dct:issued': resource.createdAt?.toString(),\r\n      'dct:license': resource.license,\r\n      'dct:title': resource.name,\r\n      'gx:dataLicensors': [],\r\n      'gx:dataUsageAgreement': [],\r\n      'gx:expirationDateTime': undefined,\r\n      'gx:exposedThrough': []\r\n    });\r\n\r\n    dataset['@id'] = resource._id;\r\n    dataset['odrl:hasPolicy'] = resource.policy;\r\n    dataset['@type'] = 'DataResource';\r\n    dataset['dcterms:rights'] = resource.copyrightOwnedBy;\r\n    dataset['dcterms:creator'] = new foaf.Agent({ account: resource.producedBy });\r\n    const conceptScheme = new skos.ConceptScheme({\r\n      themes: [],\r\n      themeTaxonomy: ''\r\n    });\r\n    dataset['dcat:theme'] = new skos.Concept({\r\n      inScheme: conceptScheme,\r\n      topConceptOf: conceptScheme,\r\n      definition: resource.category\r\n    });\r\n\r\n    if(resource.representation){\r\n      const location = [];\r\n      location.push(resource.representation?.url ?? '')\r\n      const distribution = new Distribution({\r\n        'dcat:language': '',\r\n        'dct:format': '',\r\n        'dct:issued': resource.representation.createdAt,\r\n        'dct:license': resource.license,\r\n        'dct:title': resource.name,\r\n        'gx:dataLicensors': resource.producedBy,\r\n        'gx:dataUsageAgreement': [],\r\n        'gx:expirationDateTime': '',\r\n        'gx:hash': '',\r\n        'gx:hashAlgorithm': '',\r\n        'gx:location': resource.country_or_region,\r\n      });\r\n\r\n      distribution['@id'] = resource.representation?._id;\r\n      distribution['@type'] = 'ptx:representation'\r\n      distribution['dcterms:issued'] = resource.representation?.createdAt;\r\n      distribution['dcterms:modified'] = resource.representation?.updatedAt;\r\n      distribution['dcterms:accessRights'] = resource.representation?.method;\r\n      distribution['dcterms:rights'] = resource.representation?.credential;\r\n      distribution['dcat:mediaType'] = resource.representation?.type;\r\n      distribution['dcat:accessURL'] = resource.representation?.url;\r\n\r\n      dataset['dct:distributions'].push(distribution);\r\n    }\r\n\r\n    if(resource.apiResponseRepresentation){\r\n      const distribution = new Distribution({\r\n        'dcat:language': '',\r\n        'dct:format': '',\r\n        'dct:issued': resource.apiResponseRepresentation.createdAt,\r\n        'dct:license': resource.license,\r\n        'dct:title': resource.name,\r\n        'gx:dataLicensors': resource.producedBy,\r\n        'gx:dataUsageAgreement': [],\r\n        'gx:expirationDateTime': '',\r\n        'gx:hash': '',\r\n        'gx:hashAlgorithm': '',\r\n        'gx:location': resource.country_or_region,\r\n      });\r\n      distribution['@id'] = resource.apiResponseRepresentation._id;\r\n      distribution['@type'] = 'ptx:apiResponseRepresentation';\r\n      distribution['dcterms:modified'] = resource.apiResponseRepresentation.updatedAt;\r\n      distribution['dcterms:accessRights'] = resource.apiResponseRepresentation.method;\r\n      distribution['dcterms:rights'] = resource.apiResponseRepresentation.credential;\r\n      distribution['dcat:mediaType'] = resource.apiResponseRepresentation.type;\r\n      dataset['dct:distributions'].push(distribution);\r\n    }\r\n\r\n    return dataset;\r\n  }\r\n\r\n  /**\r\n   * Map a Prometheus-X Software Resource to a Gaia-X Data Set\r\n   * @param resource ISoftwareResource\r\n   * @return DataSet\r\n   */\r\n  public mapSoftwareResourceToDataSet(resource: ISoftwareResource): DataSet {\r\n    const dataSet = new DataSet({\r\n      'dct:description': resource.description,\r\n      'dct:distributions': [],\r\n      'dct:identifier': resource._id ?? '',\r\n      'dct:issued': resource.createdAt,\r\n      'dct:license': resource.license,\r\n      'dct:title': resource.name,\r\n      'gx:dataLicensors': resource.providedBy,\r\n      'gx:dataUsageAgreement': [],\r\n      'gx:expirationDateTime': undefined,\r\n      'gx:exposedThrough': []\r\n    });\r\n\r\n    dataSet['@id'] = resource._id;\r\n    dataSet['@type'] = 'SoftwareResource';\r\n    dataSet['dcterms:modified'] = resource.updatedAt;\r\n    dataSet['dcat:version'] = resource.schema_version;\r\n    dataSet['odrl:hasPolicy'] = resource.policy;\r\n\r\n    dataSet['dcterms:creator'] = new foaf.Agent({ account: resource.providedBy });\r\n    const conceptScheme = new skos.ConceptScheme({\r\n      themes: [],\r\n      themeTaxonomy: ''\r\n    });\r\n    dataSet['dcat:theme'] = new skos.Concept({\r\n      inScheme: conceptScheme,\r\n      topConceptOf: conceptScheme,\r\n      definition: resource.category\r\n    });\r\n\r\n    dataSet['dcterms:rights'] = resource.copyrightOwnedBy;\r\n\r\n    dataSet['dcterms:hasPart'] = (resource.aggregationOf || []).map(\r\n      (resourceId: string) => {\r\n        const dataset = new DataSet({\r\n          'dct:description': '',\r\n          'dct:distributions': [],\r\n          'dct:identifier': '',\r\n          'dct:title': '',\r\n          'gx:exposedThrough': []\r\n        });\r\n        dataset['@id'] = resourceId;\r\n        return dataset;\r\n      }\r\n    );\r\n\r\n    const countryCodes = resource.locationAddress.map(\r\n      (element: { countryCode: any }) => element.countryCode\r\n    );\r\n\r\n    dataSet['dcterms:language'] = countryCodes.join(';');\r\n\r\n    if (resource.representation) {\r\n      const distribution = new Distribution({\r\n        'dcat:language': '',\r\n        'dct:format': '',\r\n        'dct:issued': '',\r\n        'dct:license': [],\r\n        'dct:title': '',\r\n        'gx:dataLicensors': [],\r\n        'gx:dataUsageAgreement': [],\r\n        'gx:expirationDateTime': '',\r\n        'gx:hash': '',\r\n        'gx:hashAlgorithm': '',\r\n        'gx:location': resource.country_or_region || [],\r\n      });\r\n\r\n      distribution['@id'] = resource.representation._id;\r\n      distribution['@type'] = 'ptx:representation';\r\n      distribution['dcat:accessURL'] = resource.representation.url;\r\n      distribution['dcterms:modified'] = resource.representation.updatedAt;\r\n      distribution['dcterms:accessRights'] = resource.representation.method;\r\n      distribution['dcterms:rights'] = resource.representation.credential;\r\n      distribution['dcat:mediaType'] = resource.representation.type;\r\n\r\n      dataSet['dct:distributions'].push(distribution);\r\n    }\r\n\r\n    return dataSet;\r\n  }\r\n\r\n  /**\r\n   * Map a Prometheus-X Service Offering to a Gaia-X Data Product\r\n   * @param resource IServiceOffering\r\n   * @async\r\n   * @return Promise<DataProduct>\r\n   */\r\n  public async mapServiceOfferingToDataProduct(resource: IServiceOffering): Promise<DataProduct> {\r\n\r\n    const agent = new foaf.Agent({ account: resource.providedBy ?? '' });\r\n    agent.account = resource.providedBy ?? '';\r\n\r\n    const contact = new vcard.Kind();\r\n    contact.url = resource.dependsOn ?? '';\r\n\r\n    const datasets: DataSet[] = [];\r\n    const relations: Relationship[] = [];\r\n\r\n    for (const element of resource.aggregationOf) {\r\n      const response = await axios.get(element);\r\n\r\n      const relation = new Relationship();\r\n      relation['dcat:hadRole'] = response.data['@type'];\r\n      relation['dcterms:relation'] = element;\r\n      relation['dcterms:description'] = response.data.description;\r\n      relations.push(relation);\r\n\r\n      if(response.data['@type'] === 'DataResource'){\r\n        const dataset = this.mapDataResourceToDataSet(response.data);\r\n        datasets.push(dataset);\r\n      } else {\r\n        const dataset = this.mapSoftwareResourceToDataSet(response.data);\r\n        datasets.push(dataset);\r\n      }\r\n    }\r\n\r\n    const dataProduct = new DataProduct(\r\n      {\r\n        'dct:identifier': resource._id ?? '',\r\n        'dct:license': [],\r\n        'gx:aggregationOf': datasets,\r\n        'gx:providedBy': resource.providedBy ?? '',\r\n        'gx:termsAndConditions': resource.termsAndConditions,\r\n        'gx:title': resource.name ?? '',\r\n        'gx:description':  resource.description ?? '',\r\n        'odrl:hasPolicy':  resource.policy,\r\n        'dct:issued':  resource.createdAt,\r\n        'dcat:contactPoint':  contact,\r\n        'dcterms:conformsTo':  resource.termsAndConditions,\r\n        'gx:obsoleteDateTime': undefined,\r\n        'gx:dataLicensors': [],\r\n        'gx:dataUsageAgreement': [],\r\n      }\r\n    );\r\n\r\n    dataProduct['@type'] = 'ServiceOffering';\r\n    dataProduct['dcterms:modified'] = resource.updatedAt;\r\n    dataProduct['dcat:version'] = resource.schema_version;\r\n    dataProduct['dcat:keyword'] = resource.keywords.join(';') && resource.category.join(';');\r\n    dataProduct['gx:aggregationOf'] = datasets;\r\n    dataProduct['dcterms:creator'] = agent;\r\n\r\n    dataProduct['dcat:qualifiedRelation'] = relations;\r\n\r\n    dataProduct['dcterms:creator'] = new foaf.Agent({ account: resource.providedBy ?? '' });\r\n\r\n    dataProduct['dcat:contactPoint'] = new vcard.Kind();\r\n    dataProduct['dcat:contactPoint'].url = resource.dependsOn;\r\n    dataProduct['dcterms:conformsTo'] = resource.termsAndConditions;\r\n\r\n    return dataProduct;\r\n  }\r\n\r\n  /**\r\n   * Map Prometheus-X Service Offerings to Gaia-X Data Products\r\n   * @param resources any[]\r\n   * @async\r\n   * @return Promise<any[]>\r\n   * @private\r\n   */\r\n  private async mapServiceOfferings(resources: any[]): Promise<any[]> {\r\n    const mapping = [];\r\n    for(const resource of resources){\r\n      mapping.push(await this.mapServiceOfferingToDataProduct(resource));\r\n    }\r\n\r\n    return mapping;\r\n  }\r\n\r\n  /**\r\n   * Map Prometheus-X Resources to Gaia-X Resources\r\n   * @param dataResources any[]\r\n   * @param softwareResources any[]\r\n   * @return any[]\r\n   * @private\r\n   */\r\n  private mapResources(dataResources: any[], softwareResources: any[]): any[] {\r\n    const mapping = [];\r\n    for(const dataResource of dataResources){\r\n      mapping.push(this.mapDataResourceToDataSet(dataResource));\r\n    }\r\n    for(const softwareResource of softwareResources){\r\n      mapping.push(this.mapSoftwareResourceToDataSet(softwareResource));\r\n    }\r\n\r\n    return mapping;\r\n  }\r\n\r\n  /**\r\n   * Map a Prometheus-X Catalog to a Gaia-X Catalog\r\n   * @param resources any[]\r\n   * @async\r\n   * @return Promise<DataCatalog>\r\n   */\r\n  public async mapPtxCatalogToGaiaXCatalog(resources: any[]): Promise<DataCatalog> {\r\n    const serviceOfferings = resources.filter((element) =>  element['@type']?.toLowerCase() === 'serviceoffering');\r\n    const dataResources = resources.filter((element) => element['@type']?.toLowerCase() === 'dataresource');\r\n    const softwareResources = resources.filter((element) => element['@type']?.toLowerCase() === 'softwareresource');\r\n\r\n    const catalog = new DataCatalog({\r\n      'gx-trust-framework:getVerifiableCredentialsIDs': resources.map((element) => element._id).join(','),\r\n    });\r\n\r\n    catalog['@context'] = 'https://w3id.org/dspace/2024/1/context.json';\r\n    catalog['@type'] = 'dcat:Catalog';\r\n    catalog['dcat:resource'] = await this.mapServiceOfferings(serviceOfferings);\r\n    catalog['dcat:dataset'] = this.mapResources(dataResources, softwareResources);\r\n    catalog['foaf:homepage'] = 'catalog/offers';\r\n\r\n    return catalog;\r\n  }\r\n}\r\n","import { odrl } from './odrl';\r\nimport { skos } from './skos';\r\nimport { dcterms } from './dcterms';\r\nimport { foaf } from './foaf';\r\nimport { vcard } from './vcard';\r\nimport { prov } from './prov';\r\nimport { IRelationship } from './Relationship';\r\n\r\nexport interface IResource {\r\n    '@id'?: string;\r\n    '@context'?: string;\r\n    '@type'?: string;\r\n    'dcterms:title'?: string;\r\n    'dcterms:description'?: string;\r\n    'dcterms:accessRights'?: dcterms.RightsStatement;\r\n    'dcterms:conformsTo'?: dcterms.Standard;\r\n    'dcat:contactPoint'?: vcard.Kind;\r\n    'dcterms:creator'?: foaf.Agent;\r\n    'dcterms:issued'?: string | Date;\r\n    'dcterms:modified'?: string | Date;\r\n    'dcterms:language'?: string;\r\n    'dcterms:publisher'?: foaf.Agent;\r\n    'dcterms:identifier'?: string;\r\n    'dcat:theme'?: skos.Concept;\r\n    'dcterms:type'?: string;\r\n    'dcterms:relation'?: string | string[];\r\n    'dcat:qualifiedRelation'?: IRelationship | IRelationship[];\r\n    'dcat:keyword'?: string;\r\n    'dcat:landingPage'?: string;\r\n    'prov:qualifiedAttribution'?: prov.Attribution;\r\n    'dcterms:license'?: string | string[];\r\n    'dcterms:rights'?: string | string[];\r\n    'dcterms:hasPart'?: IResource | IResource[];\r\n    'odrl:hasPolicy'?: odrl.Policy | odrl.Policy[];\r\n    'dcterms:isReferencedBy'?: IResource;\r\n    'dcat:previousVersion'?: IResource;\r\n    'dcat:hasVersion'?: IResource;\r\n    'dcat:hasCurrentVersion'?: IResource;\r\n    'dcterms:replaces'?: IResource;\r\n    'dcat:version'?: string;\r\n    'adms:versionNotes'?: string;\r\n    'adms:status'?: string;\r\n    'dcat:first'?: IResource;\r\n    'dcat:last'?: IResource;\r\n    'dcat:prev'?: IResource;\r\n}\r\n\r\nexport class Resource implements IResource {\r\n  public '@id'?: string;\r\n  public '@context'?: string;\r\n  public '@type'?: string;\r\n  public 'dcterms:title'?: string;\r\n  public 'dcterms:description'?: string;\r\n  public 'dcterms:accessRights'?: dcterms.RightsStatement;\r\n  public 'dcterms:conformsTo'?: dcterms.Standard;\r\n  public 'dcat:contactPoint'?: vcard.Kind;\r\n  public 'dcterms:creator'?: foaf.Agent;\r\n  public 'dcterms:issued'?: string | Date;\r\n  public 'dcterms:modified'?: string | Date;\r\n  public 'dcterms:language'?: string;\r\n  public 'dcterms:publisher'?: foaf.Agent;\r\n  public 'dcterms:identifier'?: string;\r\n  public 'dcat:theme'?: skos.Concept;\r\n  public 'dcterms:type'?: string;\r\n  public 'dcterms:relation'?: string | string[];\r\n  public 'dcat:qualifiedRelation'?: IRelationship | IRelationship[];\r\n  public 'dcat:keyword'?: string;\r\n  public 'dcat:landingPage'?: string;\r\n  public 'prov:qualifiedAttribution'?: prov.Attribution;\r\n  public 'dcterms:license'?: string | string[];\r\n  public 'dcterms:rights'?: string | string[];\r\n  public 'dcterms:hasPart'?: IResource | IResource[];\r\n  public 'odrl:hasPolicy'?: odrl.Policy | odrl.Policy[];\r\n  public 'dcterms:isReferencedBy'?: IResource;\r\n  public 'dcat:previousVersion'?: IResource;\r\n  public 'dcat:hasVersion'?: IResource;\r\n  public 'dcat:hasCurrentVersion'?: IResource;\r\n  public 'dcterms:replaces'?: IResource;\r\n  public 'dcat:version'?: string;\r\n  public 'adms:versionNotes'?: string;\r\n  public 'adms:status'?: string;\r\n  public 'dcat:first'?: IResource;\r\n  public 'dcat:last'?: IResource;\r\n  public 'dcat:prev'?: IResource;\r\n\r\n  /**\r\n   * Converts the Resource to a plain object\r\n   * @returns {IResource} The plain object representation\r\n   */\r\n  public toJSON(): IResource {\r\n    return {\r\n      '@id': this['@id'],\r\n      '@context': this['@context'],\r\n      '@type': this['@type'],\r\n      'dcterms:title': this['dcterms:title'],\r\n      'dcterms:description': this['dcterms:description'],\r\n      'dcterms:accessRights': this['dcterms:accessRights'],\r\n      'dcterms:conformsTo': this['dcterms:conformsTo'],\r\n      'dcat:contactPoint': this['dcat:contactPoint'],\r\n      'dcterms:creator': this['dcterms:creator'],\r\n      'dcterms:issued': this['dcterms:issued'],\r\n      'dcterms:modified': this['dcterms:modified'],\r\n      'dcterms:language': this['dcterms:language'],\r\n      'dcterms:publisher': this['dcterms:publisher'],\r\n      'dcterms:identifier': this['dcterms:identifier'],\r\n      'dcat:theme': this['dcat:theme'],\r\n      'dcterms:type': this['dcterms:type'],\r\n      'dcterms:relation': this['dcterms:relation'],\r\n      'dcat:qualifiedRelation': this['dcat:qualifiedRelation'],\r\n      'dcat:keyword': this['dcat:keyword'],\r\n      'dcat:landingPage': this['dcat:landingPage'],\r\n      'prov:qualifiedAttribution': this['prov:qualifiedAttribution'],\r\n      'dcterms:license': this['dcterms:license'],\r\n      'dcterms:rights': this['dcterms:rights'],\r\n      'dcterms:hasPart': this['dcterms:hasPart'],\r\n      'odrl:hasPolicy': this['odrl:hasPolicy'],\r\n      'dcterms:isReferencedBy': this['dcterms:isReferencedBy'],\r\n      'dcat:previousVersion': this['dcat:previousVersion'],\r\n      'dcat:hasVersion': this['dcat:hasVersion'],\r\n      'dcat:hasCurrentVersion': this['dcat:hasCurrentVersion'],\r\n      'dcterms:replaces': this['dcterms:replaces'],\r\n      'dcat:version': this['dcat:version'],\r\n      'adms:versionNotes': this['adms:versionNotes'],\r\n      'adms:status': this['adms:status'],\r\n      'dcat:first': this['dcat:first'],\r\n      'dcat:last': this['dcat:last'],\r\n      'dcat:prev': this['dcat:prev']\r\n    };\r\n  }\r\n}\r\n","import { DataSet, IDataSet } from './DataSet';\r\nimport { DataUsage, IDataUsage } from './DataUsage';\r\nimport { IPolicy, Policy } from './Policy';\r\nimport { vcard } from './vcard';\r\nimport { IResource, Resource } from '../dsp/Resource';\r\n\r\n/**\r\n * Interface representing a Gaia-X Data Product\r\n * @interface IDataProduct\r\n * @property {'gx:providedBy'} gx:providedBy - A resolvable link to the participant providing the service\r\n * @property {'gx:termsAndConditions'} gx:termsAndConditions - A resolvable link to the Terms and Conditions applying to that service\r\n * @property {'dct:license'} dct:license - A list of URIs to license documents\r\n * @property {'gx:title'} gx:title - Title of the Data Product\r\n * @property {'gx:description'} gx:description - Optional description of the Data Product\r\n * @property {'dct:issued'} dct:issued - Optional publication date in ISO 8601 format\r\n * @property {'gx:obsoleteDateTime'} gx:obsoleteDateTime - Optional date time in ISO 8601 format after which the Data Product is obsolete\r\n * @property {'odrl:hasPolicy'} odrl:hasPolicy - Optional policy expressed using ODRL\r\n * @property {'gx:dataLicensors'} gx:dataLicensors - Optional list of Licensors either as a free form string or participant Description\r\n * @property {'gx:dataUsageAgreement'} gx:dataUsageAgreement - Optional list of authorizations from the data subjects as Natural Person when the dataset contains PII\r\n * @property {'gx:aggregationOf'} gx:aggregationOf - Array of datasets that this data product aggregates\r\n * @property {'dct:identifier'} dct:identifier - Unique uuid4 for the data product\r\n * @property {'dcat:contactPoint'} dcat:contactPoint - Optional contacts to get more information in vCard format\r\n * @property {'dcterms:conformsTo'} dcterms:conformsTo - Optional list of established standards to which the described resource conforms\r\n */\r\nexport interface IDataProduct extends IResource{\r\n    'gx:providedBy': string;\r\n    'gx:termsAndConditions': string;\r\n    'dct:license': string[];\r\n    'gx:title': string;\r\n    'gx:description'?: string;\r\n    'dct:issued'?: Date | string;\r\n    'gx:obsoleteDateTime'?: Date;\r\n    'gx:dataLicensors'?: string[];\r\n    'gx:dataUsageAgreement'?: IDataUsage[];\r\n    'gx:aggregationOf': IDataSet[];\r\n    'dct:identifier': string;\r\n}\r\n\r\n/**\r\n * Class representing a Gaia-X Data Product\r\n * @class DataProduct\r\n * @implements {IDataProduct}\r\n */\r\nexport class DataProduct extends Resource implements IDataProduct {\r\n  public 'gx:providedBy': string;\r\n  public 'gx:termsAndConditions': string;\r\n  public 'dct:license': string[];\r\n  public 'gx:title': string;\r\n  public 'gx:description'?: string;\r\n  public 'dct:issued'?: Date;\r\n  public 'gx:obsoleteDateTime'?: Date;\r\n  public 'gx:dataLicensors'?: string[];\r\n  public 'gx:dataUsageAgreement'?: DataUsage[];\r\n  public 'gx:aggregationOf': DataSet[];\r\n  public 'dct:identifier': string;\r\n\r\n  /**\r\n     * Creates an instance of DataProduct\r\n     * @param {Partial<IDataProduct>} init - Partial data to initialize the DataProduct\r\n     */\r\n  constructor(init: IDataProduct) {\r\n    super();\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n     * Converts the DataProduct to a plain object\r\n     * @returns {IDataProduct} The plain object representation\r\n     */\r\n  public toJSON(): IDataProduct {\r\n    return {\r\n      ...super.toJSON(),\r\n      'gx:providedBy': this['gx:providedBy'],\r\n      'gx:termsAndConditions': this['gx:termsAndConditions'],\r\n      'dct:license': this['dct:license'],\r\n      'gx:title': this['gx:title'],\r\n      'gx:description': this['gx:description'],\r\n      'dct:issued': this['dct:issued'],\r\n      'gx:obsoleteDateTime': this['gx:obsoleteDateTime'],\r\n      'gx:dataLicensors': this['gx:dataLicensors'],\r\n      'gx:dataUsageAgreement': this['gx:dataUsageAgreement'],\r\n      'gx:aggregationOf': this['gx:aggregationOf'],\r\n      'dct:identifier': this['dct:identifier'],\r\n    };\r\n  }\r\n}\r\n","import { IDatasetSeries } from './DatasetSeries';\r\nimport { dcterms } from './dcterms';\r\nimport { IDistribution } from './Distribution';\r\nimport { IResource, Resource } from './Resource';\r\n\r\nexport interface IDataset extends IResource{\r\n    'dcat:distribution'?: IDistribution | IDistribution[];\r\n    'dcterms:accrualPeriodicity'?: string;\r\n    'dcat:inSeries'?: IDatasetSeries;\r\n    'dcterms:spatial'?: string; // geographicalCoverage;\r\n    'dcat:spatialResolutionInMeters'?: number;\r\n    'dcterms:temporal'?: dcterms.PeriodOfTime;\r\n    'dcat:temporalResolution'?: string;\r\n}\r\n\r\nexport class Dataset extends Resource implements IDataset {\r\n  public 'dcat:distribution'?: IDistribution | IDistribution[];\r\n  public 'dcterms:accrualPeriodicity'?: string;\r\n  public 'dcat:inSeries'?: IDatasetSeries;\r\n  public 'dcterms:spatial'?: string; // geographicalCoverage;\r\n  public 'dcat:spatialResolutionInMeters'?: number;\r\n  public 'dcterms:temporal'?: dcterms.PeriodOfTime;\r\n  public 'dcat:temporalResolution'?: string;\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDataset} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDataset {\r\n    return {\r\n      ...super.toJSON(),\r\n      'dcat:distribution': this['dcat:distribution'],\r\n      'dcterms:accrualPeriodicity': this['dcterms:accrualPeriodicity'],\r\n      'dcat:inSeries': this['dcat:inSeries'],\r\n      'dcterms:spatial': this['dcterms:spatial'],\r\n      'dcat:spatialResolutionInMeters': this['dcat:spatialResolutionInMeters'],\r\n      'dcterms:temporal': this['dcterms:temporal'],\r\n      'dcat:temporalResolution': this['dcat:temporalResolution']\r\n    };\r\n  }\r\n}\r\n","import { DataUsageAgreement, IDataUsageAgreement } from './DataUsageAgreement';\r\nimport { IDistribution, Distribution } from './Distribution';\r\nimport { Dataset as DSPDataSet } from '../dsp/Dataset';\r\nimport { IDataset as IDSPDataSet } from '../dsp/Dataset';\r\n\r\n/**\r\n * Represents a Data Set.\r\n * @interface IDataSet\r\n * @property {'dct:title'} dct:title - Title of the Data Product.\r\n * @property {'dct:description'} dct:description - Description of the Data Product.\r\n * @property {'dct:distributions'} dct:distributions - List of distributions format of the dataset.\r\n * @property {'dct:identifier'} dct:identifier - Unique uuid4.\r\n * @property {'dct:issued'} dct:issued - Publication date in ISO 8601 format.\r\n * @property {'gx:expirationDateTime'} gx:expirationDateTime - Date time in ISO 8601 format after which data is expired and shall be deleted.\r\n * @property {'dct:license'} dct:license - A list of URIs to license document.\r\n * @property {'gx:dataLicensors'} gx:dataLicensors - A list of Data Licensors either as a free form string or participant Description.\r\n * @property {'gx:dataUsageAgreement'} gx:dataUsageAgreement - List of authorizations from the data subjects as Natural Person when the dataset contains PII, as defined by the Trust Framework.\r\n * @property {'gx:exposedThrough'} gx:exposedThrough - A resolvable link to the data exchange component that exposes the Data Product.\r\n */\r\nexport interface IDataSet extends IDSPDataSet {\r\n    'dct:title'?: string;\r\n    'dct:description'?: string;\r\n    'dct:distributions'?: IDistribution[];\r\n    'dct:identifier'?: string;\r\n    'dct:issued'?: Date | string;\r\n    'gx:expirationDateTime'?: Date;\r\n    'dct:license'?: string[];\r\n    'gx:dataLicensors'?: string[];\r\n    'gx:dataUsageAgreement'?: IDataUsageAgreement[];\r\n    'gx:exposedThrough'?: string[];\r\n}\r\n\r\n/**\r\n * Implementation of IDataSet.\r\n * @class DataSet\r\n * @implements {IDataSet}\r\n */\r\nexport class DataSet extends DSPDataSet implements IDataSet {\r\n  public 'dct:title': string;\r\n  public 'dct:description': string;\r\n  public 'dct:distributions': Distribution[];\r\n  public 'dct:identifier': string;\r\n  public 'dct:issued'?: Date | string;\r\n  public 'gx:expirationDateTime'?: Date;\r\n  public 'dct:license'?: string[];\r\n  public 'gx:dataLicensors'?: string[];\r\n  public 'gx:dataUsageAgreement'?: DataUsageAgreement[];\r\n  public 'gx:exposedThrough': string[];\r\n\r\n  /**\r\n   * Constructs a new DataSet instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: IDataSet) {\r\n    super();\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDataSet} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDataSet {\r\n    return {\r\n      ...super.toJSON(),\r\n      '@type': this['@type'],\r\n      'dcterms:title': this['dct:title'],\r\n      'dcterms:description': this['dct:description'],\r\n      'dct:title': this['dct:title'],\r\n      'dct:description': this['dct:description'],\r\n      'dct:distributions': this['dct:distributions'],\r\n      'dct:identifier': this['dct:identifier'],\r\n      'dct:issued': this['dct:issued'],\r\n      'gx:expirationDateTime': this['gx:expirationDateTime'],\r\n      'dct:license': this['dct:license'],\r\n      'gx:dataLicensors': this['gx:dataLicensors'],\r\n      'gx:dataUsageAgreement': this['gx:dataUsageAgreement']?.map((agreement) => agreement.toJSON()),\r\n      'gx:exposedThrough': this['gx:exposedThrough']\r\n    };\r\n  }\r\n}\r\n","export class Agent {\r\n  public account: string;\r\n\r\n  constructor(init: { account?: string }) {\r\n    this.account = init.account || '';\r\n  }\r\n}\r\n","export class Person {\r\n  public name: string;\r\n  public homepage: string;\r\n\r\n  constructor(init: { name?: string; homepage?: string }) {\r\n    this.name = init.name || '';\r\n    this.homepage = init.homepage || '';\r\n  }\r\n}\r\n","export class Organization {\r\n  public name: string;\r\n  public homepage: string;\r\n\r\n  constructor(init: { name?: string; homepage?: string }) {\r\n    this.name = init.name || '';\r\n    this.homepage = init.homepage || '';\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-namespace */\r\nimport { Agent as _Agent } from './Agent';\r\nimport { Person as _Person } from './Person';\r\nimport { Organization as _Organization } from './Organization';\r\n\r\nexport namespace foaf {\r\n    export class Agent extends _Agent {}\r\n    export class Person extends _Person {}\r\n    export class Organization extends _Organization {}\r\n}\r\n","import { IDataService } from './DataService';\r\n\r\nexport interface IDistribution {\r\n  '@id'?: string;\r\n  '@type'?: string;\r\n  'dcterms:title'?: string;\r\n  'dcterms:description'?: string;\r\n  'dcterms:issued'?: string | Date;\r\n  'dcterms:modified'?: string | Date;\r\n  'dcterms:license'?: string;\r\n  'dcterms:accessRights'?: string;\r\n  'dcterms:rights'?: string;\r\n  'odrl:hasPolicy'?: boolean;\r\n  'dcat:accessURL'?: string | string[];\r\n  'dcat:downloadURL'?: string | string[];\r\n  'dcat:accessService'?: IDataService;\r\n  'dcat:byteSize'?: number;\r\n  'dcat:spatialResolutionInMeters'?: string;\r\n  'dcat:temporalResolution'?: string;\r\n  'dcterms:conformsTo'?: string;\r\n  'dcat:mediaType'?: string;\r\n  'dcterms:format'?: string;\r\n  'dcat:compressFormat'?: string;\r\n  'dcat:packageFormat'?: string;\r\n}\r\n\r\nexport class Distribution implements IDistribution {\r\n  public '@id'?: string;\r\n  public '@type'?: string;\r\n  public 'dcterms:title'?: string;\r\n  public 'dcterms:description'?: string;\r\n  public 'dcterms:issued'?: string | Date;\r\n  public 'dcterms:modified'?: string | Date;\r\n  public 'dcterms:license'?: string;\r\n  public 'dcterms:accessRights'?: string;\r\n  public 'dcterms:rights'?: string;\r\n  public 'odrl:hasPolicy'?: boolean;\r\n  public 'dcat:accessURL'?: string | string[];\r\n  public 'dcat:downloadURL'?: string | string[];\r\n  public 'dcat:accessService'?: IDataService;\r\n  public 'dcat:byteSize'?: number;\r\n  public 'dcat:spatialResolutionInMeters'?: string;\r\n  public 'dcat:temporalResolution'?: string;\r\n  public 'dcterms:conformsTo'?: string;\r\n  public 'dcat:mediaType'?: string;\r\n  public 'dcterms:format'?: string;\r\n  public 'dcat:compressFormat'?: string;\r\n  public 'dcat:packageFormat'?: string;\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDistribution} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDistribution {\r\n    return {\r\n      '@id': this['@id'],\r\n      '@type': this['@type'],\r\n      'dcterms:title': this['dcterms:title'],\r\n      'dcterms:description': this['dcterms:description'],\r\n      'dcterms:issued': this['dcterms:issued'],\r\n      'dcterms:modified': this['dcterms:modified'],\r\n      'dcterms:license': this['dcterms:license'],\r\n      'dcterms:accessRights': this['dcterms:accessRights'],\r\n      'dcterms:rights': this['dcterms:rights'],\r\n      'odrl:hasPolicy': this['odrl:hasPolicy'],\r\n      'dcat:accessURL': this['dcat:accessURL'],\r\n      'dcat:downloadURL': this['dcat:downloadURL'],\r\n      'dcat:accessService': this['dcat:accessService'],\r\n      'dcat:byteSize': this['dcat:byteSize'],\r\n      'dcat:spatialResolutionInMeters': this['dcat:spatialResolutionInMeters'],\r\n      'dcat:temporalResolution': this['dcat:temporalResolution'],\r\n      'dcterms:conformsTo': this['dcterms:conformsTo'],\r\n      'dcat:mediaType': this['dcat:mediaType'],\r\n      'dcterms:format': this['dcterms:format'],\r\n      'dcat:compressFormat': this['dcat:compressFormat'],\r\n      'dcat:packageFormat': this['dcat:packageFormat']\r\n    };\r\n  }\r\n}\r\n","import { DataUsageAgreement, IDataUsageAgreement } from './DataUsageAgreement';\r\nimport { Distribution as DSPDistribution } from '../dsp/Distribution';\r\nimport { IDistribution as IDSPDistribution } from '../dsp/Distribution';\r\n\r\n/**\r\n * Represents a dataset distribution.\r\n * @interface IDistribution\r\n * @property {'dct:title'} dct:title - Title of the Data Product.\r\n * @property {'dct:format'} dct:format - Format of the dataset distribution (e.g., 'application/pdf', 'text/csv').\r\n * @property {'dcat:compressFormat'} dcat:compressFormat - The compression format of the distribution in which the data is contained in a compressed form.\r\n * @property {'dcat:packageFormat'} dcat:packageFormat - The package format of the distribution in which one or more data files are grouped together.\r\n * @property {'dcat:byteSize'} dcat:byteSize - Size of the dataset distribution.\r\n * @property {'gx:location'} gx:location - List of dataset storage location.\r\n * @property {'gx:hash'} gx:hash - To uniquely identify the data contained in the dataset distribution.\r\n * @property {'gx:hashAlgorithm'} gx:hashAlgorithm - Hash Algorithm.\r\n * @property {'dct:issued'} dct:issued - Publication date in ISO 8601 format.\r\n * @property {'gx:expirationDateTime'} gx:expirationDateTime - Date time in ISO 8601 format after which data is expired and shall be deleted.\r\n * @property {'dcat:language'} dcat:language - Language.\r\n * @property {'dct:license'} dct:license - A list of URIs to license document.\r\n * @property {'gx:dataLicensors'} gx:dataLicensors - A list of Licensors either as a free form string or participant Description.\r\n * @property {'gx:dataUsageAgreement'} gx:dataUsageAgreement - List of authorizations from the data subjects as Natural Person when the dataset contains PII, as defined by the Trust Framework.\r\n */\r\nexport interface IDistribution extends Omit<IDSPDistribution, 'dcat:compressFormat' | 'dcat:packageFormat'> {\r\n    'dct:title': string;\r\n    'dct:format': string;\r\n    'gx:location'?: string[];\r\n    'gx:hash'?: string;\r\n    'gx:hashAlgorithm'?: string;\r\n    'dct:issued'?: Date | string;\r\n    'gx:expirationDateTime'?: string;\r\n    'dcat:language'?: string;\r\n    'dct:license'?: string[];\r\n    'gx:dataLicensors'?: string[];\r\n    'gx:dataUsageAgreement'?: IDataUsageAgreement[];\r\n}\r\n\r\n/**\r\n * Implementation of IDistribution.\r\n * @class Distribution\r\n * @implements {IDistribution}\r\n */\r\nexport class Distribution extends DSPDistribution implements IDistribution {\r\n  public 'dct:title': string;\r\n  public 'dct:format': string;\r\n  public 'gx:location'?: string[];\r\n  public 'gx:hash'?: string;\r\n  public 'gx:hashAlgorithm'?: string;\r\n  public 'dct:issued'?: string;\r\n  public 'gx:expirationDateTime'?: string;\r\n  public 'dcat:language'?: string;\r\n  public 'dct:license'?: string[];\r\n  public 'gx:dataLicensors'?: string[];\r\n  public 'gx:dataUsageAgreement'?: DataUsageAgreement[];\r\n\r\n  /**\r\n   * Constructs a new Distribution instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: IDistribution) {\r\n    super();\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDistribution} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDistribution {\r\n    return {\r\n      ...super.toJSON(),\r\n      'dct:title': this['dct:title'],\r\n      'dct:format': this['dct:format'],\r\n      'gx:location': this['gx:location'],\r\n      'gx:hash': this['gx:hash'],\r\n      'gx:hashAlgorithm': this['gx:hashAlgorithm'],\r\n      'dct:issued': this['dct:issued'],\r\n      'gx:expirationDateTime': this['gx:expirationDateTime'],\r\n      'dcat:language': this['dcat:language'],\r\n      'dct:license': this['dct:license'],\r\n      'gx:dataLicensors': this['gx:dataLicensors'],\r\n      'gx:dataUsageAgreement': this['gx:dataUsageAgreement']?.map((agreement) => agreement.toJSON())\r\n    };\r\n  }\r\n}\r\n","/**\r\n * Represents a vCard Kind.\r\n * @class Kind\r\n */\r\nexport class Kind {\r\n  /**\r\n     * URL or array of URLs associated with the vCard.\r\n     */\r\n  public url!: string | string[];\r\n}\r\n","/* eslint-disable @typescript-eslint/no-namespace */\r\nimport { Kind as _Kind } from './Kind';\r\n\r\n/**\r\n * Namespace containing vCard related classes.\r\n * @namespace vcard\r\n */\r\nexport namespace vcard {\r\n  /**\r\n   * Implementation of vCard Kind.\r\n   * @class Kind\r\n   * @extends {_Kind}\r\n   */\r\n  export class Kind extends _Kind {}\r\n}\r\n","import { IDataService } from './DataService';\r\nimport { Dataset, IDataset } from './Dataset';\r\nimport { IResource } from './Resource';\r\n\r\nexport interface ICatalog extends IDataset {\r\n  'foaf:homepage'?: string;\r\n  'dcat:themeTaxonomy'?: string[];\r\n  'dcat:resource'?: IResource | IResource[];\r\n  'dcat:dataset'?: IDataset | IDataset[];\r\n  'dcat:service'?: IDataService[];\r\n  'dcat:catalog'?: ICatalog | ICatalog[];\r\n}\r\n\r\nexport class Catalog extends Dataset implements ICatalog {\r\n  public 'foaf:homepage'?: string;\r\n  public 'dcat:themeTaxonomy'?: string[];\r\n  public 'dcat:resource'?: IResource | IResource[];\r\n  public 'dcat:dataset'?: IDataset | IDataset[];\r\n  public 'dcat:service'?: IDataService[];\r\n  public 'dcat:catalog'?: ICatalog | ICatalog[];\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {ICatalog} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): ICatalog {\r\n    return {\r\n      'foaf:homepage': this['foaf:homepage'],\r\n      'dcat:themeTaxonomy': this['dcat:themeTaxonomy'],\r\n      'dcat:resource': this['dcat:resource'],\r\n      'dcat:dataset': this['dcat:dataset'],\r\n      'dcat:service': this['dcat:service'],\r\n      'dcat:catalog': this['dcat:catalog']\r\n    };\r\n  }\r\n}\r\n","import { ICatalog } from '../dsp/Catalog';\r\nimport { Catalog } from '../dsp/Catalog';\r\n/**\r\n * Represents a Gaia-X Data Catalog.\r\n * @interface IDataCatalog\r\n * @property {'gx-trust-framework:getVerifiableCredentialsIDs'} gx-trust-framework:getVerifiableCredentialsIDs - \r\n * A route used to synchronize catalogues and retrieve the list of Verifiable Credentials (issuer, id).\r\n */\r\nexport interface IDataCatalog extends ICatalog {\r\n    'gx-trust-framework:getVerifiableCredentialsIDs': string;\r\n}\r\n\r\n/**\r\n * Implementation of IDataCatalog.\r\n * @class DataCatalog\r\n * @implements {IDataCatalog}\r\n */\r\nexport class DataCatalog extends Catalog implements IDataCatalog {\r\n  /**\r\n   * The route used to synchronize catalogues and retrieve the list of Verifiable Credentials (issuer, id).\r\n   */\r\n  public 'gx-trust-framework:getVerifiableCredentialsIDs': string;\r\n\r\n  /**\r\n   * Constructs a new DataCatalog instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: IDataCatalog) {\r\n    super();\r\n    this['gx-trust-framework:getVerifiableCredentialsIDs'] = init['gx-trust-framework:getVerifiableCredentialsIDs'];\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDataCatalog} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDataCatalog {\r\n    return {\r\n      ...super.toJSON(),\r\n      'gx-trust-framework:getVerifiableCredentialsIDs': this['gx-trust-framework:getVerifiableCredentialsIDs']\r\n    };\r\n  }\r\n}\r\n","import { skos } from '.';\r\n\r\nexport class Concept {\r\n  public inScheme?: skos.ConceptScheme;\r\n  public topConceptOf?: skos.ConceptScheme;\r\n  public definition: any;\r\n\r\n  constructor(init: { inScheme?: skos.ConceptScheme; topConceptOf?: skos.ConceptScheme; definition: any }) {\r\n    this.inScheme = new skos.ConceptScheme({});\r\n    this.topConceptOf = new skos.ConceptScheme({});\r\n    this.definition = init.definition;\r\n  }\r\n}\r\n","import { skos } from '.';\r\n\r\nexport class ConceptScheme {\r\n  public themes: skos.Concept[];\r\n  public themeTaxonomy: string;\r\n\r\n  constructor(init: { themes?: skos.Concept[]; themeTaxonomy?: string }) {\r\n    this.themes = init.themes || [];\r\n    this.themeTaxonomy = init.themeTaxonomy || '';\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-namespace */\r\nimport { Concept as _Concept } from './Concept';\r\nimport { ConceptScheme as _ConceptScheme } from './ConceptScheme';\r\n\r\nexport namespace skos {\r\n    export class Concept extends _Concept {}\r\n    export class ConceptScheme extends _ConceptScheme {}\r\n}\r\n","import { Resource, IResource } from './Resource';\r\n\r\nexport interface IRelationship extends IResource {\r\n    'dcat:hadRole'?: string;\r\n}\r\n\r\nexport class Relationship extends Resource{\r\n  public 'dcat:hadRole'?: string;\r\n}\r\n","import { DataRepresentation, IDataRepresentation } from './DataRepresentation';\r\n\r\n/**\r\n * Represents a Data Resource.\r\n * @interface IDataResource\r\n * @property {IDataRepresentation} [representation] - The data representation.\r\n * @property {IDataRepresentation} [apiResponseRepresentation] - The API response representation.\r\n * @property {string | Date} [createdAt] - The creation date.\r\n * @property {string | Date} [updatedAt] - The last update date.\r\n * @property {any} [name] - The name of the resource.\r\n * @property {any} [description] - The description of the resource.\r\n * @property {any} [license] - The license information.\r\n * @property {any} [policy] - The policy information.\r\n * @property {any} [producedBy] - The producer information.\r\n * @property {any} [schema_version] - The schema version.\r\n * @property {any} [country_or_region] - The country or region.\r\n * @property {any} [copyrightOwnedBy] - The copyright owner.\r\n * @property {any} [category] - The category.\r\n * @property {any} [subCategories] - The subcategories.\r\n * @property {any} [exposedThrough] - The exposure information.\r\n */\r\nexport interface IDataResource {\r\n    representation?: IDataRepresentation;\r\n    apiResponseRepresentation?: IDataRepresentation;\r\n    createdAt?: string | Date;\r\n    updatedAt?: string | Date;\r\n    name?: any;\r\n    description?: any;\r\n    _id?: any;\r\n    license?: any;\r\n    policy?: any;\r\n    producedBy?: any;\r\n    schema_version?: any;\r\n    country_or_region?: any;\r\n    copyrightOwnedBy?: any;\r\n    category?: any;\r\n    subCategories?: any;\r\n    exposedThrough?: any;\r\n}\r\n\r\n/**\r\n * Implementation of IDataResource.\r\n * @class DataResource\r\n * @implements {IDataResource}\r\n */\r\nexport class DataResource implements IDataResource {\r\n  public _id?: string;\r\n  public representation?: DataRepresentation;\r\n  public apiResponseRepresentation?: DataRepresentation;\r\n  public createdAt?: string | Date;\r\n  public updatedAt?: string | Date;\r\n  public name?: any;\r\n  public description?: any;\r\n  public license?: any;\r\n  public policy?: any;\r\n  public producedBy?: any;\r\n  public schema_version?: any;\r\n  public country_or_region?: any;\r\n  public copyrightOwnedBy?: any;\r\n  public category?: any;\r\n  public subCategories?: any;\r\n  public exposedThrough?: any;\r\n\r\n  /**\r\n   * Constructs a new DataResource instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: IDataResource) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDataResource} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDataResource {\r\n    return {\r\n      representation: this.representation,\r\n      apiResponseRepresentation: this.apiResponseRepresentation,\r\n      createdAt: this.createdAt,\r\n      updatedAt: this.updatedAt,\r\n      name: this.name,\r\n      description: this.description,\r\n      license: this.license,\r\n      policy: this.policy,\r\n      producedBy: this.producedBy,\r\n      schema_version: this.schema_version,\r\n      country_or_region: this.country_or_region,\r\n      copyrightOwnedBy: this.copyrightOwnedBy,\r\n      category: this.category,\r\n      subCategories: this.subCategories,\r\n      exposedThrough: this.exposedThrough\r\n    };\r\n  }\r\n}\r\n\r\n","import { DataRepresentation, IDataRepresentation } from './DataRepresentation';\r\n\r\n/**\r\n * Represents a Software Resource.\r\n * @interface ISoftwareResource\r\n * @property {IDataRepresentation} [representation] - The data representation.\r\n * @property {IDataRepresentation} [apiResponseRepresentation] - The API response representation.\r\n * @property {string | Date} [createdAt] - The creation date.\r\n * @property {string | Date} [updatedAt] - The last update date.\r\n * @property {any} [name] - The name of the resource.\r\n * @property {any} [description] - The description of the resource.\r\n * @property {any} [license] - The license information.\r\n * @property {any} [policy] - The policy information.\r\n * @property {any} [schema_version] - The schema version.\r\n * @property {any} [country_or_region] - The country or region.\r\n * @property {any} [copyrightOwnedBy] - The copyright owner.\r\n * @property {any} [category] - The category.\r\n * @property {any} [subCategories] - The subcategories.\r\n * @property {any} [exposedThrough] - The exposure information.\r\n * @property {any} [providedBy] - The provider information.\r\n * @property {any} [aggregationOf] - The aggregation information.\r\n * @property {any} [locationAddress] - The location address.\r\n * @property {any} [demo_link] - The demo link.\r\n */\r\nexport interface ISoftwareResource {\r\n    _id?: string;\r\n    representation?: IDataRepresentation;\r\n    apiResponseRepresentation?: IDataRepresentation;\r\n    createdAt?: string | Date;\r\n    updatedAt?: string | Date;\r\n    name?: any;\r\n    description?: any;\r\n    license?: any;\r\n    policy?: any;\r\n    schema_version?: any;\r\n    country_or_region?: any;\r\n    copyrightOwnedBy?: any;\r\n    category?: any;\r\n    subCategories?: any;\r\n    exposedThrough?: any;\r\n    providedBy?: any;\r\n    aggregationOf?: any;\r\n    locationAddress?: any;\r\n    demo_link?: any;\r\n}\r\n\r\n/**\r\n * Implementation of ISoftwareResource.\r\n * @class SoftwareResource\r\n * @implements {ISoftwareResource}\r\n */\r\nexport class SoftwareResource implements ISoftwareResource {\r\n  public _id?: string;\r\n  public representation?: DataRepresentation;\r\n  public apiResponseRepresentation?: DataRepresentation;\r\n  public createdAt?: string | Date;\r\n  public updatedAt?: string | Date;\r\n  public name?: any;\r\n  public description?: any;\r\n  public license?: any;\r\n  public policy?: any;\r\n  public schema_version?: any;\r\n  public country_or_region?: any;\r\n  public copyrightOwnedBy?: any;\r\n  public category?: any;\r\n  public subCategories?: any;\r\n  public exposedThrough?: any;\r\n  public providedBy?: any;\r\n  public aggregationOf?: any;\r\n  public locationAddress?: any;\r\n  public demo_link?: any;\r\n\r\n  /**\r\n   * Constructs a new SoftwareResource instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: ISoftwareResource) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {ISoftwareResource} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): ISoftwareResource {\r\n    return {\r\n      _id: this._id,\r\n      representation: this.representation,\r\n      apiResponseRepresentation: this.apiResponseRepresentation,\r\n      createdAt: this.createdAt,\r\n      updatedAt: this.updatedAt,\r\n      name: this.name,\r\n      description: this.description,\r\n      license: this.license,\r\n      policy: this.policy,\r\n      schema_version: this.schema_version,\r\n      country_or_region: this.country_or_region,\r\n      copyrightOwnedBy: this.copyrightOwnedBy,\r\n      category: this.category,\r\n      subCategories: this.subCategories,\r\n      exposedThrough: this.exposedThrough,\r\n      providedBy: this.providedBy,\r\n      aggregationOf: this.aggregationOf,\r\n      locationAddress: this.locationAddress,\r\n      demo_link: this.demo_link\r\n    };\r\n  }\r\n}\r\n","/**\r\n * Represents a Service Offering.\r\n * @interface IServiceOffering\r\n * @property {string} [name] - The name of the service.\r\n * @property {string} [providedBy] - The provider of the service.\r\n * @property {string} [description] - The description of the service.\r\n * @property {string | Date} [createdAt] - The creation date.\r\n * @property {string | Date} [updatedAt] - The last update date.\r\n * @property {any} [schema_version] - The schema version.\r\n * @property {any} [policy] - The policy information.\r\n * @property {any} [keywords] - The keywords.\r\n * @property {any} [category] - The category.\r\n * @property {any} [dataResources] - The data resources.\r\n * @property {any} [softwareResources] - The software resources.\r\n * @property {any} [location] - The location information.\r\n * @property {any} [aggregationOf] - The aggregation information.\r\n * @property {any} [dependsOn] - The dependencies.\r\n * @property {any} [termsAndConditions] - The terms and conditions.\r\n */\r\nexport interface IServiceOffering {\r\n    _id?: string;\r\n    name?: string;\r\n    providedBy?: string;\r\n    description?: string;\r\n    createdAt?: string | Date;\r\n    updatedAt?: string | Date;\r\n    schema_version?: any;\r\n    policy?: any;\r\n    keywords?: any;\r\n    category?: any;\r\n    dataResources?: any;\r\n    softwareResources?: any;\r\n    location?: any;\r\n    aggregationOf?: any;\r\n    dependsOn?: any;\r\n    termsAndConditions?: any;\r\n}\r\n\r\n/**\r\n * Implementation of IServiceOffering.\r\n * @class ServiceOffering\r\n * @implements {IServiceOffering}\r\n */\r\nexport class ServiceOffering implements IServiceOffering {\r\n  public _id?: string;\r\n  public name?: string;\r\n  public providedBy?: string;\r\n  public description?: string;\r\n  public createdAt?: string | Date;\r\n  public updatedAt?: string | Date;\r\n  public schema_version?: any;\r\n  public policy?: any;\r\n  public keywords?: any;\r\n  public category?: any;\r\n  public dataResources?: any;\r\n  public softwareResources?: any;\r\n  public location?: any;\r\n  public aggregationOf?: any;\r\n  public dependsOn?: any;\r\n  public termsAndConditions?: any;\r\n\r\n  /**\r\n   * Constructs a new ServiceOffering instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: IServiceOffering) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IServiceOffering} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IServiceOffering {\r\n    return {\r\n      _id: this._id,\r\n      name: this.name,\r\n      providedBy: this.providedBy,\r\n      description: this.description,\r\n      createdAt: this.createdAt,\r\n      updatedAt: this.updatedAt,\r\n      schema_version: this.schema_version,\r\n      policy: this.policy,\r\n      keywords: this.keywords,\r\n      category: this.category,\r\n      dataResources: this.dataResources,\r\n      softwareResources: this.softwareResources,\r\n      location: this.location,\r\n      aggregationOf: this.aggregationOf,\r\n      dependsOn: this.dependsOn,\r\n      termsAndConditions: this.termsAndConditions\r\n    };\r\n  }\r\n}\r\n","/**\r\n * Represents a Data Representation.\r\n * @interface IDataRepresentation\r\n * @property {string} [_id] - The unique identifier.\r\n * @property {string} [type] - The type of representation.\r\n * @property {string} [url] - The URL of the representation.\r\n * @property {string} [method] - The HTTP method.\r\n * @property {string} [credential] - The credential information.\r\n * @property {string | Date} [createdAt] - The creation date.\r\n * @property {string | Date} [updatedAt] - The last update date.\r\n */\r\nexport interface IDataRepresentation {\r\n    _id?: string;\r\n    type?: string;\r\n    resourceID?: string;\r\n    url?: string;\r\n    method?: string;\r\n    credential?: string;\r\n    createdAt?: string | Date;\r\n    updatedAt?: string | Date;\r\n}\r\n\r\n/**\r\n * Implementation of IDataRepresentation.\r\n * @class DataRepresentation\r\n * @implements {IDataRepresentation}\r\n */\r\nexport class DataRepresentation implements IDataRepresentation {\r\n  public _id?: string;\r\n  public type?: string;\r\n  public resourceID?: string;\r\n  public url?: string;\r\n  public method?: string;\r\n  public credential?: string;\r\n  public createdAt?: string | Date;\r\n  public updatedAt?: string | Date;\r\n\r\n  /**\r\n   * Constructs a new DataRepresentation instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: IDataRepresentation) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDataRepresentation} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDataRepresentation {\r\n    return {\r\n      _id: this._id,\r\n      type: this.type,\r\n      resourceID: this.type,\r\n      url: this.url,\r\n      method: this.method,\r\n      credential: this.credential,\r\n      createdAt: this.createdAt,\r\n      updatedAt: this.updatedAt\r\n    };\r\n  }\r\n}\r\n","import { DataResource, IDataResource } from '../types/ptx/DataResource';\r\nimport { ISoftwareResource, SoftwareResource } from '../types/ptx/SoftwareResource';\r\nimport { IServiceOffering, ServiceOffering } from '../types/ptx/ServiceOffering';\r\nimport { DataProduct } from '../types/gaia-x/DataProduct';\r\nimport { IDataSet } from '../types/gaia-x/DataSet';\r\nimport { DataCatalog } from '../types/gaia-x/DataCatalog';\r\nimport { DataRepresentation } from '../types/ptx/DataRepresentation';\r\n\r\n/**\r\n * Gaia-X Catalog to Prometheus-X Catalog converter\r\n */\r\nexport class GaiaXToPtxConvertor {\r\n  /**\r\n   * Map a Gaia-X Data Set to a Prometheus-X Data Resource\r\n   * @param dataSet IDataSet\r\n   * @return DataResource\r\n   */\r\n  public mapDataSetToDataResource(dataSet: IDataSet): DataResource {\r\n    if (!dataSet['@id']) {\r\n      throw new Error('dataSet must have an @id property');\r\n    }\r\n    const resource = new DataResource({\r\n      _id: dataSet['dct:identifier'],\r\n      name: dataSet['dct:title'],\r\n      description: dataSet['dct:description'],\r\n      createdAt: dataSet['dct:issued'],\r\n      updatedAt: dataSet['dcterms:modified'],\r\n      license: dataSet['dct:license'],\r\n      schema_version: dataSet['dcat:version'],\r\n      policy: dataSet['odrl:hasPolicy'],\r\n      producedBy: dataSet['dcterms:creator']?.account,\r\n      category: dataSet['dcat:theme']?.definition,\r\n      copyrightOwnedBy: dataSet['dcterms:rights'],\r\n      exposedThrough: dataSet['gx:exposedThrough'],\r\n    });\r\n\r\n    const distributions = dataSet['dct:distributions'];\r\n  \r\n    if (Array.isArray(distributions)) {\r\n      for (const distribution of distributions) {\r\n        const rep = new DataRepresentation({\r\n          _id: distribution['@id'],\r\n          resourceID: dataSet['@id'],\r\n          url: Array.isArray(distribution['dcat:accessURL']) ? distribution['dcat:accessURL'][0] : distribution['dcat:accessURL'],\r\n          createdAt: distribution['dct:issued'],\r\n          updatedAt: distribution['dcterms:modified'],\r\n          method: distribution['dcterms:accessRights'],\r\n          credential: distribution['dcterms:rights'],\r\n          type: distribution['dcat:mediaType']\r\n        });\r\n        if (!resource.representation) {\r\n          resource.representation = rep;\r\n        } else if (!resource.apiResponseRepresentation) {\r\n          resource.apiResponseRepresentation = rep;\r\n        }\r\n      }\r\n    }\r\n  \r\n    return resource;\r\n  }\r\n\r\n  /**\r\n   * Map a Gaia-X Data Set to a Prometheus-X Software Resource\r\n   * @param resource IDataSet\r\n   * @return SoftwareResource\r\n   */\r\n  public mapDataSetToSoftwareResource(resource: IDataSet): SoftwareResource {\r\n    if (!resource['@id']) {\r\n      throw new Error('resource must have an @id property');\r\n    }\r\n    const softwareResource = new SoftwareResource({\r\n      _id: resource['@id'],\r\n      name: resource['dct:title'],\r\n      description: resource['dct:description'],\r\n      createdAt: resource['dct:issued'],\r\n      updatedAt: resource['dcterms:modified'],\r\n      license: resource['dct:license'],\r\n      schema_version: resource['dcat:version'],\r\n      policy: resource['odrl:hasPolicy'],\r\n      providedBy: resource['dcterms:creator']?.account,\r\n      category: resource['dcat:theme']?.definition,\r\n      copyrightOwnedBy: resource['dcterms:rights'],\r\n      exposedThrough: resource['gx:exposedThrough'],\r\n    });\r\n\r\n    const distributions = resource['dct:distributions'];\r\n    if (Array.isArray(distributions)) {\r\n      for (const distribution of distributions) {\r\n        const rep = new DataRepresentation({\r\n          _id: distribution['@id'],\r\n          resourceID: resource['@id'],\r\n          url: Array.isArray(distribution['dcat:accessURL']) ? distribution['dcat:accessURL'][0] : distribution['dcat:accessURL'],\r\n          createdAt: distribution['dct:issued'],\r\n          updatedAt: distribution['dcterms:modified'],\r\n          method: distribution['dcterms:accessRights'],\r\n          credential: distribution['dcterms:rights'],\r\n          type: distribution['dcat:mediaType']\r\n        });\r\n        if (!softwareResource.representation) {\r\n          softwareResource.representation = rep;\r\n        } else if (!softwareResource.apiResponseRepresentation) {\r\n          softwareResource.apiResponseRepresentation = rep;\r\n        }\r\n      }\r\n    }\r\n\r\n    return softwareResource;\r\n  }\r\n\r\n  /**\r\n   * Map a Gaia-X Data Product to a Prometheus-X Service Offering\r\n   * @param resource DataProduct\r\n   * @async\r\n   * @return Promise<ServiceOffering>\r\n   */\r\n  public async mapDataProductToServiceOffering(resource: DataProduct): Promise<ServiceOffering> {\r\n    if (!resource['@id']) {\r\n      throw new Error('resource must have an @id property');\r\n    }\r\n    const serviceOffering = new ServiceOffering({\r\n      _id: resource['@id'],\r\n      name: resource['gx:title'],\r\n      description: resource['gx:description'],\r\n      createdAt: resource['dct:issued'],\r\n      updatedAt: resource['dcterms:modified'],\r\n      schema_version: resource['dcat:version'],\r\n      policy: resource['odrl:hasPolicy'],   \r\n      providedBy: resource['dcterms:creator']?.account,\r\n      category: resource['dcat:theme']?.definition,\r\n      termsAndConditions: resource['dcterms:conformsTo'],\r\n    });\r\n\r\n    serviceOffering.dataResources = [];\r\n    serviceOffering.softwareResources = [];\r\n\r\n    const datasets = resource['gx:aggregationOf'];\r\n    if (Array.isArray(datasets)) {\r\n      for (const dataset of datasets) {\r\n        if(dataset['@type'] === 'DataResource'){\r\n          const dataResource = this.mapDataSetToDataResource(dataset as IDataSet);\r\n          serviceOffering.dataResources.push(dataResource);\r\n        } else {\r\n          const softwareResource = this.mapDataSetToSoftwareResource(dataset as IDataSet);\r\n          serviceOffering.softwareResources.push(softwareResource);\r\n        }\r\n      }\r\n    }\r\n\r\n    return serviceOffering;\r\n  }\r\n\r\n  /**\r\n   * Map a Gaia-X Catalog to a Prometheus-X Catalog\r\n   * @param catalog DataCatalog\r\n   * @async\r\n   * @return Promise<{\r\n   *       serviceOfferings: IServiceOffering[],\r\n   *       dataResources: IDataResource[]\r\n   *       softwareResources: ISoftwareResource[]\r\n   *   }>\r\n   */\r\n  async mapGaiaXCatalogToPtxCatalog(catalog: DataCatalog): Promise<{\r\n        serviceOfferings: IServiceOffering[],\r\n        dataResources: IDataResource[]\r\n        softwareResources: ISoftwareResource[]\r\n    }> {\r\n    const serviceOfferings: IServiceOffering[] = [];\r\n    const dataResources: IDataResource[] = [];\r\n    const softwareResources: ISoftwareResource[] = [];\r\n\r\n    if (catalog['dcat:resource'] && Array.isArray(catalog['dcat:resource'])) {\r\n      for (const dataProduct of catalog['dcat:resource']) {\r\n        const mapping = await this.mapDataProductToServiceOffering(dataProduct as DataProduct)\r\n        serviceOfferings.push(mapping)\r\n      }\r\n    }\r\n\r\n    if (catalog['dcat:dataset']) {\r\n      if(Array.isArray(catalog['dcat:dataset'])){\r\n        for (const dataset of catalog['dcat:dataset']) {\r\n          let mapping;\r\n          if (dataset['@type'] === 'DataResource') {\r\n            mapping = this.mapDataSetToDataResource(dataset as IDataSet)\r\n            dataResources.push(mapping)\r\n          } else {\r\n            mapping = this.mapDataSetToSoftwareResource(dataset as IDataSet)\r\n            softwareResources.push(mapping)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      serviceOfferings,\r\n      dataResources,\r\n      softwareResources\r\n    };\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { IDataResource } from '../types/ptx/DataResource';\r\nimport { Dataset } from '../types/dsp/Dataset';\r\nimport { DataService } from '../types/dsp/DataService';\r\nimport { foaf } from '../types/dsp/foaf';\r\nimport { skos } from '../types/dsp/skos';\r\nimport { ISoftwareResource } from '../types/ptx/SoftwareResource';\r\nimport { IServiceOffering } from '../types/ptx/ServiceOffering';\r\nimport { Catalog, ICatalog } from '../types/dsp/Catalog';\r\nimport { Distribution } from '../types/dsp/Distribution';\r\nimport { Relationship } from '../types/dsp/Relationship';\r\nimport { vcard } from '../types/dsp/vcard';\r\n\r\n/**\r\n * Prometheus-X Catalog to DCAT Catalog converter\r\n */\r\nexport class PtxToDcatConvertor {\r\n\r\n  /**\r\n   * Map a Prometheus-X Data Resource to a DCAT Data Service\r\n   * @param resource IDataResource\r\n   * @return Dataset\r\n   */\r\n  public mapDataResourceToDataService(resource: IDataResource): Dataset {\r\n    const dataService = new DataService();\r\n    dataService['@id'] = resource._id;\r\n    dataService['@type'] = 'DataResource';\r\n    dataService['dcterms:title'] = resource.name;\r\n    dataService['dcterms:description'] = resource.description;\r\n    dataService['dcterms:issued'] = resource.createdAt;\r\n    dataService['dcterms:modified'] = resource.updatedAt;\r\n    dataService['dcterms:license'] = resource.license;\r\n    dataService['dcat:version'] = resource.schema_version;\r\n    dataService['odrl:hasPolicy'] = resource.policy;\r\n\r\n    dataService['dcterms:creator'] = new foaf.Agent({ account: resource.producedBy });\r\n\r\n    dataService['dcat:theme'] = new skos.Concept({ definition: resource.category });\r\n\r\n    dataService['dcterms:rights'] = resource.copyrightOwnedBy;\r\n    dataService['dcat:endpointURL'] = resource.exposedThrough;\r\n\r\n    dataService['dcat:servesDataset'] = [];\r\n\r\n    if(resource.representation){\r\n      const representation = new Dataset();\r\n      const distribution = new Distribution();\r\n\r\n      distribution['dcat:accessURL'] = resource.representation?.url;\r\n      distribution['@id'] = resource.representation?._id;\r\n      distribution['@type'] = 'ptx:representation'\r\n      distribution['dcterms:issued'] = resource.representation?.createdAt;\r\n      distribution['dcterms:modified'] = resource.representation?.updatedAt;\r\n      distribution['dcterms:accessRights'] = resource.representation?.method;\r\n      distribution['dcterms:rights'] = resource.representation?.credential;\r\n      distribution['dcat:mediaType'] = resource.representation?.type;\r\n\r\n      representation['dcat:distribution'] = distribution;\r\n      dataService['dcat:servesDataset'].push(representation);\r\n    }\r\n\r\n    if(resource.apiResponseRepresentation){\r\n      const apiResponseRepresentation = new Dataset();\r\n      const distribution = new Distribution();\r\n\r\n      distribution['dcat:accessURL'] = resource.apiResponseRepresentation?.url;\r\n      distribution['@id'] = resource.apiResponseRepresentation?._id;\r\n      distribution['@type'] = 'ptx:apiResponseRepresentation'\r\n      distribution['dcterms:issued'] = resource.apiResponseRepresentation?.createdAt;\r\n      distribution['dcterms:modified'] = resource.apiResponseRepresentation?.updatedAt;\r\n      distribution['dcterms:accessRights'] = resource.apiResponseRepresentation?.method;\r\n      distribution['dcterms:rights'] = resource.apiResponseRepresentation?.credential;\r\n      distribution['dcat:mediaType'] = resource.apiResponseRepresentation?.type;\r\n\r\n      apiResponseRepresentation['dcat:distribution'] = distribution;\r\n      dataService['dcat:servesDataset'].push(apiResponseRepresentation);\r\n\r\n    }\r\n\r\n    return dataService;\r\n  }\r\n\r\n  /**\r\n   * Map a Prometheus-X Software Resource to a DCAT Data Service\r\n   * @param resource ISoftwareResource\r\n   * @return DataService\r\n   */\r\n  public mapSoftwareResourceToDataService(resource: ISoftwareResource): DataService {\r\n    const dataService = new DataService();\r\n    dataService['@id'] = resource._id;\r\n    dataService['@type'] = 'SoftwareResource';\r\n    dataService['dcterms:title'] = resource.name;\r\n    dataService['dcterms:description'] = resource.description;\r\n    dataService['dcterms:issued'] = resource.createdAt;\r\n    dataService['dcterms:modified'] = resource.updatedAt;\r\n    dataService['dcterms:license'] = resource.license;\r\n    dataService['dcat:version'] = resource.schema_version;\r\n    dataService['odrl:hasPolicy'] = resource.policy;\r\n\r\n    dataService['dcterms:creator'] = new foaf.Agent({ account: resource.providedBy });\r\n\r\n    dataService['dcat:theme'] = new skos.Concept({ definition: resource.category });\r\n\r\n    dataService['dcterms:rights'] = resource.copyrightOwnedBy;\r\n\r\n    dataService['dcterms:hasPart'] = (resource.aggregationOf || []).map(\r\n      (resourceId: string) => {\r\n        const dataset = new Dataset();\r\n        dataset['@id'] = resourceId;\r\n        return dataset;\r\n      }\r\n    );\r\n\r\n    const countryCodes = resource.locationAddress.map(\r\n      (element: { countryCode: any }) => element.countryCode\r\n    );\r\n    dataService['dcterms:language'] = countryCodes.join(';');\r\n    dataService['dcat:endpointURL'] = resource.exposedThrough;\r\n    dataService['dcat:endpointDescription'] = resource.demo_link;\r\n\r\n    dataService['dcat:servesDataset'] = [];\r\n\r\n    if(resource.representation){\r\n      const representation = new Dataset();\r\n      const distribution = new Distribution();\r\n\r\n      distribution['dcat:accessURL'] = resource.representation?.url;\r\n      distribution['@id'] = resource.representation?._id;\r\n      distribution['@type'] = 'ptx:representation'\r\n      distribution['dcterms:issued'] = resource.representation?.createdAt;\r\n      distribution['dcterms:modified'] = resource.representation?.updatedAt;\r\n      distribution['dcterms:accessRights'] = resource.representation?.method;\r\n      distribution['dcterms:rights'] = resource.representation?.credential;\r\n      distribution['dcat:mediaType'] = resource.representation?.type;\r\n\r\n      representation['dcat:distribution'] = distribution;\r\n      dataService['dcat:servesDataset'].push(representation);\r\n    }\r\n\r\n    return dataService;\r\n  }\r\n\r\n  /**\r\n   * Map a Prometheus-X Service Offering to a DCAT Data Set\r\n   * @param resource IServiceOffering\r\n   * @async\r\n   * @return Promise<Catalog>\r\n   */\r\n  public async mapServiceOfferingToDataSet(resource: IServiceOffering): Promise<Catalog> {\r\n    const dataset = new Dataset();\r\n\r\n    const distributions: Distribution[] = [];\r\n    const relations: Relationship[] = [];\r\n\r\n    for (const element of resource.aggregationOf) {\r\n      const response = await axios.get(element);\r\n\r\n      const relation = new Relationship();\r\n      relation['dcat:hadRole'] = response.data['@type'];\r\n      relation['dcterms:relation'] = element;\r\n      relation['dcterms:description'] = response.data.description;\r\n      relations.push(relation);\r\n\r\n      if (response.data.representation) {\r\n        const distribution = new Distribution();\r\n        distribution['dcat:accessURL'] = response.data.representation.url;\r\n        distribution['dcat:mediaType'] = response.data.representation.fileType;\r\n        distribution['dcat:accessService'] =\r\n                    response.data['@type'] === 'SoftwareResource'\r\n                      ? this.mapSoftwareResourceToDataService(response.data)\r\n                      : response.data['@type'] === 'DataResource'\r\n                        ? this.mapDataResourceToDataService(response.data)\r\n                        : new DataService();\r\n        distributions.push(distribution);\r\n      }\r\n\r\n      if (response.data.apiResponseRepresentation) {\r\n        const distribution = new Distribution();\r\n        distribution['dcat:accessURL'] = response.data.apiResponseRepresentation.url;\r\n        distribution['dcat:mediaType'] = response.data.apiResponseRepresentation.fileType;\r\n        distribution['dcat:accessService'] =\r\n                    response.data['@type'] === 'SoftwareResource'\r\n                      ? this.mapSoftwareResourceToDataService(response.data)\r\n                      : response.data['@type'] === 'DataResource'\r\n                        ? this.mapDataResourceToDataService(response.data)\r\n                        : new DataService();\r\n        distributions.push(distribution);\r\n      }\r\n    }\r\n\r\n    dataset['@id'] = resource._id;\r\n    dataset['@type'] = 'ServiceOffering';\r\n    dataset['dcterms:title'] = resource.name ?? '';\r\n    dataset['dcterms:description'] = resource.description ?? '';\r\n    dataset['dcterms:identifier'] = resource._id;\r\n\r\n    dataset['odrl:hasPolicy'] = resource.policy;\r\n    dataset['dcterms:issued'] = resource.createdAt;\r\n    dataset['dcterms:modified'] = resource.updatedAt;\r\n    dataset['dcat:version'] = resource.schema_version;\r\n    dataset['dcat:keyword'] = resource.keywords.join(';') && resource.category.join(';');\r\n\r\n    dataset['dcterms:hasPart'] = resource.aggregationOf;\r\n    dataset['dcat:distribution'] = distributions;\r\n    dataset['dcat:qualifiedRelation'] = relations;\r\n\r\n    dataset['dcterms:creator'] = new foaf.Agent({ account: resource.providedBy ?? '' });\r\n    dataset['dcterms:spatial'] = resource.location;\r\n    dataset['dcat:contactPoint'] = new vcard.Kind(resource.dependsOn);\r\n    dataset['dcterms:conformsTo'] = resource.termsAndConditions;\r\n\r\n    return dataset;\r\n  }\r\n\r\n  /**\r\n   * Map Prometheus-X Service Offerings to DCAT Data Sets\r\n   * @param resources any[]\r\n   * @async\r\n   * @return Promise<any[]>\r\n   * @private\r\n   */\r\n  private async mapServiceOfferings(resources: any[]): Promise<any[]> {\r\n    const mapping = [];\r\n    for(const resource of resources){\r\n      mapping.push(await this.mapServiceOfferingToDataSet(resource));\r\n    }\r\n\r\n    return mapping;\r\n  }\r\n\r\n  /**\r\n   * Map Prometheus-X Resources to DCAT Resources\r\n   * @param dataResources any[]\r\n   * @param softwareResources any[]\r\n   * @return any[]\r\n   * @private\r\n   */\r\n  private mapResources(dataResources: any[], softwareResources: any[]): any[] {\r\n    const mapping = [];\r\n    for(const dataResource of dataResources){\r\n      mapping.push(this.mapDataResourceToDataService(dataResource));\r\n    }\r\n    for(const softwareResource of softwareResources){\r\n      mapping.push(this.mapSoftwareResourceToDataService(softwareResource));\r\n    }\r\n\r\n    return mapping;\r\n  }\r\n\r\n  /**\r\n   * Map a Prometheus-X Catalog to a DCAT Catalog\r\n   * @param resources any[]\r\n   * @async\r\n   * @return Promise<ICatalog>\r\n   */\r\n  public async mapPtxCatalogToDcatCatalog(resources: any[]): Promise<Catalog> {\r\n    const serviceOfferings = resources.filter((element) =>  element['@type']?.toLowerCase() === 'serviceoffering');\r\n    const dataResources = resources.filter((element) => element['@type']?.toLowerCase() === 'dataresource');\r\n    const softwareResources = resources.filter((element) => element['@type']?.toLowerCase() === 'softwareresource');\r\n\r\n    const catalog = new Catalog();\r\n    \r\n    catalog['@context'] = 'https://w3id.org/dspace/2024/1/context.json';\r\n    catalog['@type'] = 'dcat:Catalog';\r\n    catalog['dcat:dataset'] = await this.mapServiceOfferings(serviceOfferings);\r\n    catalog['dcat:service'] = this.mapResources(dataResources, softwareResources);\r\n    catalog['foaf:homepage'] = 'catalog/offers';\r\n\r\n    return catalog;\r\n  }\r\n}\r\n","import { IDataset } from './Dataset';\r\nimport { IResource, Resource } from './Resource';\r\n\r\nexport interface IDataService extends IResource {\r\n    'dcat:endpointURL'?: string | string[];\r\n    'dcat:endpointDescription'?: string;\r\n    'dcat:servesDataset'?: IDataset[];\r\n}\r\n\r\nexport class DataService extends Resource implements IDataService {\r\n  public 'dcat:endpointURL'?: string | string[];\r\n  public 'dcat:endpointDescription'?: string;\r\n  public 'dcat:servesDataset'?: IDataset[];\r\n}\r\n","export class Kind {\r\n  // custom properties\r\n  public url: string | string[];\r\n\r\n  constructor(init: { url: string | string[] }) {\r\n    this.url = init.url;\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-namespace */\r\nimport { Kind as _Kind } from './Kind';\r\n\r\nexport namespace vcard {\r\n    export class Kind extends _Kind {}\r\n}\r\n","import { DataResource, IDataResource } from '../types/ptx/DataResource';\r\nimport { IDataset } from '../types/dsp/Dataset';\r\nimport { IDataService } from '../types/dsp/DataService';\r\nimport { ISoftwareResource, SoftwareResource } from '../types/ptx/SoftwareResource';\r\nimport { IServiceOffering, ServiceOffering } from '../types/ptx/ServiceOffering';\r\nimport { ICatalog } from '../types/dsp/Catalog';\r\nimport { DataRepresentation } from '../types/ptx/DataRepresentation';\r\n\r\n/**\r\n * DSP DCAT Catalog to Prometheus-X Catalog\r\n */\r\nexport class DcatToPtxConvertor {\r\n\r\n  /**\r\n   * map a DCAT Data Service to a Prometheus-X Data Resource\r\n   * @param dataService IDataService\r\n   * @return DataResource\r\n   */\r\n  public mapDataServiceToDataResource(dataService: IDataService): DataResource {\r\n    if (!dataService['@id']) {\r\n      throw new Error('DataService must have an @id property');\r\n    }\r\n    const resource = new DataResource({\r\n      _id: dataService['@id'],\r\n      name: dataService['dcterms:title'],\r\n      description: dataService['dcterms:description'],\r\n      createdAt: dataService['dcterms:issued'],\r\n      updatedAt: dataService['dcterms:modified'],\r\n      license: dataService['dcterms:license'],\r\n      schema_version: dataService['dcat:version'],\r\n      policy: dataService['odrl:hasPolicy'],\r\n      producedBy: dataService['dcterms:creator']?.account,\r\n      category: dataService['dcat:theme']?.definition,\r\n      copyrightOwnedBy: dataService['dcterms:rights'],\r\n      exposedThrough: dataService['dcat:endpointURL'],\r\n    });\r\n\r\n    const servesDataset = dataService['dcat:servesDataset'] ?? [];\r\n\r\n    for (const dataset of servesDataset) {\r\n            \r\n      const distribution = dataset['dcat:distribution'];\r\n\r\n      if (!distribution) continue;\r\n      if (Array.isArray(distribution)) {\r\n        throw new Error('Distribution cannot be an array');\r\n      }\r\n\r\n      const rep = new DataRepresentation({\r\n        _id: distribution['@id'],\r\n        resourceID: dataService['@id'],\r\n        url: Array.isArray(distribution['dcat:accessURL']) ? distribution['dcat:accessURL'][0] : distribution['dcat:accessURL'],\r\n        createdAt: distribution['dcterms:issued'],\r\n        updatedAt: distribution['dcterms:modified'],\r\n        method: distribution['dcterms:accessRights'],\r\n        credential: distribution['dcterms:rights'],\r\n        type: distribution['dcat:mediaType']\r\n      });\r\n\r\n      if (!resource.representation) {\r\n        resource.representation = rep;\r\n      } else if(!resource.apiResponseRepresentation) {\r\n        resource.apiResponseRepresentation = rep;\r\n      }\r\n    }\r\n\r\n    return resource;\r\n  }\r\n\r\n  /**\r\n   * map a DCAT Data Service to a Prometheus-X Software Resource\r\n   * @param dataService IDataService\r\n   * @return SoftwareResource\r\n   */\r\n  public mapDataServiceToSoftwareResource(dataService: IDataService): SoftwareResource {\r\n    if (!dataService['@id']) {\r\n      throw new Error('DataService must have an @id property');\r\n    }\r\n    const resource = new SoftwareResource({\r\n      _id: dataService['@id'],\r\n      name: dataService['dcterms:title'],\r\n      description: dataService['dcterms:description'],\r\n      createdAt: dataService['dcterms:issued'],\r\n      updatedAt: dataService['dcterms:modified'],\r\n      license: dataService['dcterms:license'],\r\n      schema_version: dataService['dcat:version'],\r\n      policy: dataService['odrl:hasPolicy'],\r\n      providedBy: dataService['dcterms:creator']?.account,\r\n      category: dataService['dcat:theme']?.definition,\r\n      copyrightOwnedBy: dataService['dcterms:rights'],\r\n      exposedThrough: dataService['dcat:endpointURL'],\r\n    });\r\n  \r\n    const servesDataset = dataService['dcat:servesDataset'] ?? [];\r\n  \r\n    for (const dataset of servesDataset) {\r\n              \r\n      const distribution = dataset['dcat:distribution'];\r\n  \r\n      if (!distribution) continue;\r\n      if (Array.isArray(distribution)) {\r\n        throw new Error('Distribution cannot be an array');\r\n      }\r\n  \r\n      const rep = new DataRepresentation({\r\n        _id: distribution['@id'],\r\n        resourceID: dataService['@id'],\r\n        url: Array.isArray(distribution['dcat:accessURL']) ? distribution['dcat:accessURL'][0] : distribution['dcat:accessURL'],\r\n        createdAt: distribution['dcterms:issued'],\r\n        updatedAt: distribution['dcterms:modified'],\r\n        method: distribution['dcterms:accessRights'],\r\n        credential: distribution['dcterms:rights'],\r\n        type: distribution['dcat:mediaType']\r\n      });\r\n  \r\n      if (!resource.representation) {\r\n        resource.representation = rep;\r\n      }\r\n    }\r\n  \r\n    return resource;\r\n  }\r\n\r\n  /**\r\n   * map a DCAT Data Set to a Prometheus-X Service Offering\r\n   * @param dataset IDataset\r\n   * @return ServiceOffering\r\n   */\r\n  public mapDataSetToServiceOffering(dataset: IDataset): ServiceOffering {\r\n    const serviceOffering = new ServiceOffering({\r\n      _id:  dataset['@id'],\r\n      name:  dataset['dcterms:title'],\r\n      description:  dataset['dcterms:description'],\r\n      policy:  dataset['odrl:hasPolicy'],\r\n      createdAt:  dataset['dcterms:issued'],\r\n      updatedAt:  dataset['dcterms:modified'],\r\n      schema_version:  dataset['dcat:version'],\r\n      keywords:  dataset['dcat:keyword'],\r\n      aggregationOf:  dataset['dcterms:hasPart']\r\n    });\r\n\r\n    if(Array.isArray(serviceOffering.aggregationOf)){\r\n      serviceOffering.aggregationOf = serviceOffering.aggregationOf.map((element: { '@id': string }) => element['@id'])\r\n    } else {\r\n      const id = serviceOffering.aggregationOf['@id']\r\n      serviceOffering.aggregationOf = [];\r\n      serviceOffering.aggregationOf.push(id);\r\n    }\r\n\r\n    serviceOffering.providedBy = dataset['dcterms:creator']?.account;\r\n\r\n    serviceOffering.location = dataset['dcterms:spatial'];\r\n    serviceOffering.dependsOn = dataset['dcat:contactPoint']?.url;\r\n    serviceOffering.termsAndConditions = dataset['dcterms:conformsTo'];\r\n\r\n\r\n    return serviceOffering;\r\n  }\r\n\r\n  /**\r\n   * map a DCAT Catalog to a Prometheus-X Service Offering\r\n   * @param catalog ICatalog\r\n   * @return {\r\n   *       serviceOfferings: IServiceOffering[],\r\n   *       dataResources: IDataResource[]\r\n   *       softwareResources: ISoftwareResource[]\r\n   *   }\r\n   */\r\n  public mapDcatCatalogToPtxCatalog(catalog: ICatalog): {\r\n      serviceOfferings: IServiceOffering[],\r\n      dataResources: IDataResource[]\r\n      softwareResources: ISoftwareResource[]\r\n  } {\r\n    const serviceOfferings: IServiceOffering[] = [];\r\n    const dataResources: IDataResource[] = [];\r\n    const softwareResources: ISoftwareResource[] = [];\r\n\r\n    if(catalog['dcat:dataset'] && Array.isArray(catalog['dcat:dataset'])){\r\n      for(const dataset of catalog['dcat:dataset']){\r\n        const mapping = this.mapDataSetToServiceOffering(dataset)\r\n        serviceOfferings.push(mapping)\r\n      }\r\n    }\r\n\r\n    if(catalog['dcat:service']){\r\n      for(const dataService of catalog['dcat:service']){\r\n        let mapping;\r\n        if(dataService['@type'] === 'DataResource'){\r\n          mapping = this.mapDataServiceToDataResource(dataService)\r\n          dataResources.push(mapping)\r\n        } else {\r\n          mapping = this.mapDataServiceToSoftwareResource(dataService)\r\n          softwareResources.push(mapping)\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      serviceOfferings,\r\n      dataResources,\r\n      softwareResources\r\n    };\r\n  }\r\n}\r\n","export interface IBillingSchema {\r\n  '@type': { '@id': string };\r\n  'simpl:billingSchemaDocument': string;\r\n  'simpl:billingSchemaHashAlg': string;\r\n  'simpl:billingSchemaHashValue': string;\r\n  'simpl:billingSchemaURL': string;\r\n}\r\n\r\nexport interface IContractTemplate {\r\n  '@type': { '@id': string };\r\n  'simpl:contractTemplateDocument': string;\r\n  'simpl:contractTemplateHashAlg': string;\r\n  'simpl:contractTemplateHashValue': string;\r\n  'simpl:contractTemplateURL': string;\r\n}\r\n\r\nexport interface IDataProperties {\r\n  '@type': { '@id': string };\r\n  'simpl:format': string;\r\n  'simpl:providerDataAddress': string;\r\n}\r\n\r\nexport interface IGeneralServiceProperties {\r\n  '@type': { '@id': string };\r\n  'simpl:description': string;\r\n  'simpl:inLanguage': string;\r\n  'simpl:name': string;\r\n  'simpl:offeringType': string;\r\n  'simpl:serviceAccessPoint': {\r\n    '@type': string;\r\n    '@value': string;\r\n  };\r\n}\r\n\r\nexport interface IOfferingPrice {\r\n  '@type': { '@id': string };\r\n  'simpl:currency': string;\r\n  'simpl:license': {\r\n    '@type': string;\r\n    '@value': string;\r\n  };\r\n  'simpl:price': {\r\n    '@type': string;\r\n    '@value': number;\r\n  };\r\n  'simpl:priceType': string;\r\n}\r\n\r\nexport interface IProviderInformation {\r\n  '@type': { '@id': string };\r\n  'simpl:contact': string;\r\n  'simpl:providedBy': string;\r\n  'simpl:signature': string;\r\n}\r\n\r\nexport interface IServicePolicy {\r\n  '@type': { '@id': string };\r\n  'simpl:access-policy': string;\r\n  'simpl:usage-policy': string;\r\n}\r\n\r\nexport interface ISlaAgreements {\r\n  '@type': { '@id': string };\r\n  'simpl:slaAgreementsDocument': string;\r\n  'simpl:slaAgreementsHashAlg': string;\r\n  'simpl:slaAgreementsHashValue': string;\r\n  'simpl:slaAgreementsURL': string;\r\n}\r\n\r\nexport interface IDataOffering {\r\n  '@context': {\r\n    'gax-validation': string;\r\n    'rdf': string;\r\n    'sh': string;\r\n    'simpl': string;\r\n    'skos': string;\r\n    'xsd': string;\r\n  };\r\n  '@id': string;\r\n  'rdf:type': {\r\n    '@id': string;\r\n  };\r\n  'simpl:billingSchema': IBillingSchema;\r\n  'simpl:contractTemplate': IContractTemplate;\r\n  'simpl:dataProperties': IDataProperties;\r\n  'simpl:generalServiceProperties': IGeneralServiceProperties;\r\n  'simpl:offeringPrice': IOfferingPrice;\r\n  'simpl:providerInformation': IProviderInformation;\r\n  'simpl:servicePolicy': IServicePolicy;\r\n  'simpl:slaAgreements': ISlaAgreements;\r\n}\r\n\r\nexport class BillingSchema implements IBillingSchema {\r\n  '@type': { '@id': string };\r\n  'simpl:billingSchemaDocument': string;\r\n  'simpl:billingSchemaHashAlg': string;\r\n  'simpl:billingSchemaHashValue': string;\r\n  'simpl:billingSchemaURL': string;\r\n\r\n  constructor(init: IBillingSchema) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ContractTemplate implements IContractTemplate {\r\n  '@type': { '@id': string };\r\n  'simpl:contractTemplateDocument': string;\r\n  'simpl:contractTemplateHashAlg': string;\r\n  'simpl:contractTemplateHashValue': string;\r\n  'simpl:contractTemplateURL': string;\r\n\r\n  constructor(init: IContractTemplate) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class DataProperties implements IDataProperties {\r\n  '@type': { '@id': string };\r\n  'simpl:format': string;\r\n  'simpl:providerDataAddress': string;\r\n\r\n  constructor(init: IDataProperties) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class GeneralServiceProperties implements IGeneralServiceProperties {\r\n  '@type': { '@id': string };\r\n  'simpl:description': string;\r\n  'simpl:inLanguage': string;\r\n  'simpl:name': string;\r\n  'simpl:offeringType': string;\r\n  'simpl:serviceAccessPoint': {\r\n    '@type': string;\r\n    '@value': string;\r\n  };\r\n\r\n  constructor(init: IGeneralServiceProperties) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class OfferingPrice implements IOfferingPrice {\r\n  '@type': { '@id': string };\r\n  'simpl:currency': string;\r\n  'simpl:license': {\r\n    '@type': string;\r\n    '@value': string;\r\n  };\r\n  'simpl:price': {\r\n    '@type': string;\r\n    '@value': number;\r\n  };\r\n  'simpl:priceType': string;\r\n\r\n  constructor(init: IOfferingPrice) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ProviderInformation implements IProviderInformation {\r\n  '@type': { '@id': string };\r\n  'simpl:contact': string;\r\n  'simpl:providedBy': string;\r\n  'simpl:signature': string;\r\n\r\n  constructor(init: IProviderInformation) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ServicePolicy implements IServicePolicy {\r\n  '@type': { '@id': string };\r\n  'simpl:access-policy': string;\r\n  'simpl:usage-policy': string;\r\n\r\n  constructor(init: IServicePolicy) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class SlaAgreements implements ISlaAgreements {\r\n  '@type': { '@id': string };\r\n  'simpl:slaAgreementsDocument': string;\r\n  'simpl:slaAgreementsHashAlg': string;\r\n  'simpl:slaAgreementsHashValue': string;\r\n  'simpl:slaAgreementsURL': string;\r\n\r\n  constructor(init: ISlaAgreements) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class DataOffering implements IDataOffering {\r\n  '@context': {\r\n    'gax-validation': string;\r\n    'rdf': string;\r\n    'sh': string;\r\n    'simpl': string;\r\n    'skos': string;\r\n    'xsd': string;\r\n  };\r\n  '@id': string;\r\n  'rdf:type': {\r\n    '@id': string;\r\n  };\r\n  'simpl:billingSchema': BillingSchema;\r\n  'simpl:contractTemplate': ContractTemplate;\r\n  'simpl:dataProperties': DataProperties;\r\n  'simpl:generalServiceProperties': GeneralServiceProperties;\r\n  'simpl:offeringPrice': OfferingPrice;\r\n  'simpl:providerInformation': ProviderInformation;\r\n  'simpl:servicePolicy': ServicePolicy;\r\n  'simpl:slaAgreements': SlaAgreements;\r\n\r\n  constructor(init: IDataOffering) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  public toJSON(): string {\r\n    return JSON.stringify(this, null, 2);\r\n  }\r\n} ","import { DataOffering } from '../types/simpl/DataOffering';\r\nimport { DataResource } from '../types/ptx/DataResource';\r\n\r\n/**\r\n * Prometheus-X Catalog to Simpl Catalog converter\r\n */\r\nexport class PtxToSimplConvertor {\r\n  /**\r\n   * Map a Prometheus-X Data Resource to a Simpl Data Offering\r\n   * @param dataResource DataResource\r\n   * @return IDataOffering\r\n   */\r\n  public mapDataOfferingToDataResource(dataResource: DataResource): DataOffering {\r\n    if (!dataResource._id) {\r\n      throw new Error('DataResource must have an _id property');\r\n    }\r\n\r\n    type PolicyType = { \r\n      policy: {\r\n          permission: { \r\n        action: string; \r\n        constraint: any[] \r\n      }[] \r\n      }\r\n    };\r\n\r\n    const usagePolicy = dataResource.policy\r\n      .filter((policy: PolicyType) => \r\n        policy.policy.permission.some((permission) => permission.action === 'use')\r\n      );\r\n\r\n    const accessPolicy = dataResource.policy\r\n      .filter((policy: PolicyType) => \r\n        policy.policy.permission.some((permission) => permission.action === 'access')\r\n      );\r\n\r\n    return new DataOffering({\r\n      '@context': {\r\n        'gax-validation': 'https://w3id.org/gaia-x/validation#',\r\n        'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\r\n        'sh': 'http://www.w3.org/ns/shacl#',\r\n        'simpl': 'https://w3id.org/simpl#',\r\n        'skos': 'http://www.w3.org/2004/02/skos/core#',\r\n        'xsd': 'http://www.w3.org/2001/XMLSchema#'\r\n      },\r\n      '@id': dataResource._id,\r\n      'rdf:type': {\r\n        '@id': 'simpl:DataOffering'\r\n      },\r\n      'simpl:billingSchema': {\r\n        '@type': { '@id': 'simpl:BillingSchema' },\r\n        'simpl:billingSchemaDocument': '',\r\n        'simpl:billingSchemaHashAlg': '',\r\n        'simpl:billingSchemaHashValue': '',\r\n        'simpl:billingSchemaURL': ''\r\n      },\r\n      'simpl:contractTemplate': {\r\n        '@type': { '@id': 'simpl:ContractTemplate' },\r\n        'simpl:contractTemplateDocument': '',\r\n        'simpl:contractTemplateHashAlg': '',\r\n        'simpl:contractTemplateHashValue': '',\r\n        'simpl:contractTemplateURL': ''\r\n      },\r\n      'simpl:dataProperties': {\r\n        '@type': { '@id': 'simpl:DataProperties' },\r\n        'simpl:format': '',\r\n        'simpl:providerDataAddress': ''\r\n      },\r\n      'simpl:generalServiceProperties': {\r\n        '@type': { '@id': 'simpl:GeneralServiceProperties' },\r\n        'simpl:description': dataResource.description || '',\r\n        'simpl:inLanguage': 'en',\r\n        'simpl:name': dataResource.name || '',\r\n        'simpl:offeringType': 'DataOffering',\r\n        'simpl:serviceAccessPoint': {\r\n          '@type': 'xsd:anyURI',\r\n          '@value': dataResource.exposedThrough || ''\r\n        }\r\n      },\r\n      'simpl:offeringPrice': {\r\n        '@type': { '@id': 'simpl:OfferingPrice' },\r\n        'simpl:currency': 'EUR',\r\n        'simpl:license': {\r\n          '@type': 'xsd:anyURI',\r\n          '@value': dataResource.license?.[0] || ''\r\n        },\r\n        'simpl:price': {\r\n          '@type': 'xsd:decimal',\r\n          '@value': 0\r\n        },\r\n        'simpl:priceType': 'Free'\r\n      },\r\n      'simpl:providerInformation': {\r\n        '@type': { '@id': 'simpl:ProviderInformation' },\r\n        'simpl:contact': '',\r\n        'simpl:providedBy': dataResource.producedBy || '',\r\n        'simpl:signature': ''\r\n      },\r\n      'simpl:servicePolicy': {\r\n        '@type': { '@id': 'simpl:ServicePolicy' },\r\n        'simpl:access-policy': JSON.stringify(accessPolicy) || '',\r\n        'simpl:usage-policy': JSON.stringify(usagePolicy) || ''\r\n      },\r\n      'simpl:slaAgreements': {\r\n        '@type': { '@id': 'simpl:SlaAgreements' },\r\n        'simpl:slaAgreementsDocument': '',\r\n        'simpl:slaAgreementsHashAlg': '',\r\n        'simpl:slaAgreementsHashValue': '',\r\n        'simpl:slaAgreementsURL': ''\r\n      }\r\n    });\r\n  }\r\n} ","import { IDataOffering } from '../types/simpl/DataOffering';\r\nimport { DataResource } from '../types/ptx/DataResource';\r\nimport { DataRepresentation } from '../types/ptx/DataRepresentation';\r\n\r\n/**\r\n * Simpl Catalog to Prometheus-X Catalog converter\r\n */\r\nexport class SimplToPtxConvertor {\r\n\r\n  /**\r\n   * Map a Simpl Data Offering to a Prometheus-X Data Resource\r\n   * @param dataOffering IDataOffering\r\n   * @return DataResource\r\n   */\r\n  public mapDataOfferingToDataResource(dataOffering: IDataOffering): DataResource {\r\n    if (!dataOffering['@id']) {\r\n      throw new Error('DataOffering must have an @id property');\r\n    }\r\n\r\n    return new DataResource({\r\n      _id: dataOffering['@id'],\r\n      name: dataOffering['simpl:generalServiceProperties']['simpl:name'],\r\n      description: dataOffering['simpl:generalServiceProperties']['simpl:description'],\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n      license: [dataOffering['simpl:offeringPrice']['simpl:license']['@value']],\r\n      schema_version: '',\r\n      policy: [\r\n        dataOffering['simpl:servicePolicy']['simpl:access-policy'],\r\n        dataOffering['simpl:servicePolicy']['simpl:usage-policy']\r\n      ],\r\n      producedBy: dataOffering['simpl:providerInformation']['simpl:providedBy'],\r\n      category: '',\r\n      copyrightOwnedBy: [],\r\n      exposedThrough: [dataOffering['simpl:generalServiceProperties']['simpl:serviceAccessPoint']['@value']],\r\n      representation: new DataRepresentation({\r\n        _id: `${dataOffering['@id']}_representation`,\r\n        resourceID: dataOffering['@id'],\r\n        type: 'REST',\r\n        url: dataOffering['simpl:generalServiceProperties']['simpl:serviceAccessPoint']['@value'],\r\n        method: 'none',\r\n        credential: '',\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString()\r\n      })\r\n    });\r\n  }\r\n} ","import { CatalogEnum } from './CatalogEnum';\r\n\r\n/**\r\n * Represents a Catalog.\r\n * @interface ICatalog\r\n * @property {string} endpoint - The endpoint URL.\r\n * @property {string} resourceId - The resource identifier.\r\n * @property {CatalogEnum} type - The type of catalog.\r\n * @property {boolean} enabled - Whether the catalog is enabled.\r\n */\r\nexport interface ICatalog {\r\n    endpoint: string;\r\n    resourceId: string;\r\n    type: CatalogEnum;\r\n    enabled: boolean;\r\n}\r\n\r\n/**\r\n * Implementation of ICatalog.\r\n * @class Catalog\r\n * @implements {ICatalog}\r\n */\r\nexport class Catalog implements ICatalog {\r\n  public endpoint!: string;\r\n  public resourceId!: string;\r\n  public type!: CatalogEnum;\r\n  public enabled!: boolean;\r\n\r\n  /**\r\n   * Constructs a new Catalog instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: ICatalog) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {ICatalog} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): ICatalog {\r\n    return {\r\n      endpoint: this.endpoint,\r\n      resourceId: this.resourceId,\r\n      type: this.type,\r\n      enabled: this.enabled\r\n    };\r\n  }\r\n}\r\n\r\n","import { ISignatureCheckType, SignatureCheckType } from './SignatureCheckType';\r\n\r\n/**\r\n * Represents a Data Product Usage Contract.\r\n * @interface IDataProductUsageContract\r\n * @property {'gx:providedBy'} gx:providedBy - A resolvable link to the Data Product Provider.\r\n * @property {'gx:consumedBy'} gx:consumedBy - A resolvable link to the Data Consumer.\r\n * @property {'gx:dataProduct'} gx:dataProduct - A resolvable link to the Data Product Description (after negotiation).\r\n * @property {'gx:signers'} gx:signers - The array identifying all required Participant signatures.\r\n * @property {'gx:termOfUsage'} gx:termOfUsage - A resolvable link to the Term of Usage.\r\n * @property {'gx:notarizedIn'} gx:notarizedIn - A resolvable link to the Notarization service.\r\n * @property {'gx:dataUsage'} gx:dataUsage - A resolvable link to Data Usage.\r\n */\r\nexport interface IDataProductUsageContract {\r\n    'gx:providedBy': string;\r\n    'gx:consumedBy': string;\r\n    'gx:dataProduct': string;\r\n    'gx:signers': ISignatureCheckType[];\r\n    'gx:termOfUsage': string;\r\n    'gx:notarizedIn'?: string;\r\n    'gx:dataUsage': string;\r\n}\r\n\r\n/**\r\n * Implementation of IDataProductUsageContract.\r\n * @class DataProductUsageContract\r\n * @implements {IDataProductUsageContract}\r\n */\r\nexport class DataProductUsageContract implements IDataProductUsageContract {\r\n  public 'gx:providedBy': string;\r\n  public 'gx:consumedBy': string;\r\n  public 'gx:dataProduct': string;\r\n  public 'gx:signers': SignatureCheckType[];\r\n  public 'gx:termOfUsage': string;\r\n  public 'gx:notarizedIn'?: string;\r\n  public 'gx:dataUsage': string;\r\n\r\n  /**\r\n   * Constructs a new DataProductUsageContract instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: IDataProductUsageContract) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDataProductUsageContract} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDataProductUsageContract {\r\n    return {\r\n      'gx:providedBy': this['gx:providedBy'],\r\n      'gx:consumedBy': this['gx:consumedBy'],\r\n      'gx:dataProduct': this['gx:dataProduct'],\r\n      'gx:signers': this['gx:signers'].map((signer) => signer.toJSON()),\r\n      'gx:termOfUsage': this['gx:termOfUsage'],\r\n      'gx:notarizedIn': this['gx:notarizedIn'],\r\n      'gx:dataUsage': this['gx:dataUsage']\r\n    };\r\n  }\r\n}\r\n","import { DataProductUsageContract, IDataProductUsageContract } from './DataProductUsageContract';\r\nimport { DataUsage, IDataUsage } from './DataUsage';\r\n\r\n/**\r\n * Represents a Data Transaction.\r\n * @interface IDataTransaction\r\n * @property {'gx:dataProductUsageContract'} gx:dataProductUsageContract - The Data Product Usage Contract.\r\n * @property {'gx:dataUsage'} gx:dataUsage - The Data Usage.\r\n */\r\nexport interface IDataTransaction {\r\n    'gx:dataProductUsageContract': IDataProductUsageContract;\r\n    'gx:dataUsage': IDataUsage;\r\n}\r\n\r\n/**\r\n * Implementation of IDataTransaction.\r\n * @class DataTransaction\r\n * @implements {IDataTransaction}\r\n */\r\nexport class DataTransaction implements IDataTransaction{\r\n  public 'gx:dataProductUsageContract': DataProductUsageContract;\r\n  public 'gx:dataUsage': DataUsage;\r\n\r\n  /**\r\n   * Constructs a new DataTransaction instance.\r\n   * @param init - The initialization object.\r\n   */\r\n  constructor(init: IDataTransaction) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  /**\r\n   * Converts the instance to a JSON object.\r\n   * @returns {IDataTransaction} The JSON representation of the instance.\r\n   */\r\n  public toJSON(): IDataTransaction {\r\n    return {\r\n      'gx:dataProductUsageContract': this['gx:dataProductUsageContract'],\r\n      'gx:dataUsage': this['gx:dataUsage']\r\n    };\r\n  }\r\n}\r\n","export interface IChecksum {\r\n    'spdx:algorithm': unknown;\r\n    'spdx:checksumValue': unknown;\r\n}\r\n\r\nexport class Checksum implements IChecksum {\r\n  public 'spdx:algorithm': unknown;\r\n  public 'spdx:checksumValue': unknown;\r\n}\r\n"],"mappings":"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","names":["axios","Resource","DataProduct","Resource","init","__spreadProps","__spreadValues","Dataset","Resource","__spreadProps","__spreadValues","DataSet","Dataset","init","_a","__spreadProps","__spreadValues","agreement","Agent","init","Person","init","Organization","init","foaf","Agent","Person","Organization","Distribution","Distribution","init","_a","__spreadProps","__spreadValues","agreement","Kind","vcard","Kind","Catalog","Dataset","DataCatalog","Catalog","init","__spreadProps","__spreadValues","Concept","init","skos","ConceptScheme","init","skos","Concept","ConceptScheme","Relationship","Resource","PtxToGaiaXConvertor","resource","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","dataset","DataSet","foaf","conceptScheme","skos","distribution","Distribution","dataSet","resourceId","countryCodes","element","__async","agent","contact","vcard","datasets","relations","response","axios","relation","Relationship","dataProduct","DataProduct","resources","mapping","dataResources","softwareResources","dataResource","softwareResource","serviceOfferings","catalog","DataCatalog","DataResource","init","SoftwareResource","init","ServiceOffering","init","DataRepresentation","init","GaiaXToPtxConvertor","dataSet","_a","_b","resource","DataResource","distributions","distribution","rep","DataRepresentation","softwareResource","SoftwareResource","__async","serviceOffering","ServiceOffering","datasets","dataset","dataResource","catalog","serviceOfferings","dataResources","softwareResources","dataProduct","mapping","axios","DataService","Resource","Kind","init","vcard","Kind","PtxToDcatConvertor","resource","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","dataService","DataService","foaf","skos","representation","Dataset","distribution","Distribution","apiResponseRepresentation","resourceId","dataset","countryCodes","element","__async","distributions","relations","response","axios","relation","Relationship","vcard","resources","mapping","dataResources","softwareResources","dataResource","softwareResource","serviceOfferings","catalog","Catalog","DcatToPtxConvertor","dataService","_a","_b","_c","resource","DataResource","servesDataset","dataset","distribution","rep","DataRepresentation","SoftwareResource","serviceOffering","ServiceOffering","element","id","catalog","serviceOfferings","dataResources","softwareResources","mapping","ContractTemplate","init","DataOffering","init","PtxToSimplConvertor","dataResource","_a","usagePolicy","policy","permission","accessPolicy","DataOffering","SimplToPtxConvertor","dataOffering","DataResource","DataRepresentation","Catalog","init","DataProductUsageContract","init","signer","DataTransaction","init","Checksum"]}